(0.000) QUERY = "SELECT CAST(SERVERPROPERTY('ProductVersion') AS varchar)" - PARAMS = (); args=None
(0.016) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.000) QUERY = 'SELECT [django_migrations].[app], [django_migrations].[name] FROM [django_migrations]' - PARAMS = (); args=()
(0.016) QUERY = "SELECT CAST(SERVERPROPERTY('ProductVersion') AS varchar)" - PARAMS = (); args=None
(0.016) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.000) QUERY = 'SELECT [django_migrations].[app], [django_migrations].[name] FROM [django_migrations]' - PARAMS = (); args=()
(0.016) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.002) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building]' - PARAMS = (); args=()
(0.034) QUERY = 'SELECT TOP 50 [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] ORDER BY [Auditorium].[BuildingId] ASC' - PARAMS = (); args=()
(0.043) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.003) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.003) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (85,); args=(85,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (54,); args=(54,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (41,); args=(41,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.005) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (10,); args=(10,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.010) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (10,); args=(10,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (74,); args=(74,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.005) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (2,); args=(2,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (73,); args=(73,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.003) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (50,); args=(50,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (107,); args=(107,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.002) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building]' - PARAMS = (); args=()
(0.003) QUERY = 'SELECT TOP 50 [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] ORDER BY [Auditorium].[BuildingId] ASC' - PARAMS = (); args=()
(0.003) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.002) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (85,); args=(85,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (54,); args=(54,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (41,); args=(41,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (10,); args=(10,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (10,); args=(10,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (74,); args=(74,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (2,); args=(2,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (73,); args=(73,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (50,); args=(50,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (107,); args=(107,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.070) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building]' - PARAMS = (); args=()
(0.033) QUERY = 'SELECT TOP 50 [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] ORDER BY [Auditorium].[BuildingId] ASC' - PARAMS = (); args=()
(0.042) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.002) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.004) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.002) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (85,); args=(85,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.016) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (54,); args=(54,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (41,); args=(41,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (10,); args=(10,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (10,); args=(10,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (74,); args=(74,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (2,); args=(2,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (73,); args=(73,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (50,); args=(50,)
(0.011) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (107,); args=(107,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.002) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.002) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building]' - PARAMS = (); args=()
(0.003) QUERY = 'SELECT TOP 50 [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] ORDER BY [Auditorium].[BuildingId] ASC' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.002) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (85,); args=(85,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (54,); args=(54,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (41,); args=(41,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (10,); args=(10,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (10,); args=(10,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (74,); args=(74,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (2,); args=(2,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (73,); args=(73,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (50,); args=(50,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (107,); args=(107,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.005) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium] WHERE [Auditorium].[BuildingId] = %s' - PARAMS = (1,); args=(1,)
(0.002) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building]' - PARAMS = (); args=()
(0.004) QUERY = 'SELECT TOP 50 [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] WHERE [Auditorium].[BuildingId] = %s ORDER BY [Auditorium].[Name] ASC' - PARAMS = (1,); args=(1,)
(0.002) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.004) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (91,); args=(91,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (80,); args=(80,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (80,); args=(80,)
(0.002) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (81,); args=(81,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (41,); args=(41,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (41,); args=(41,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (10,); args=(10,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (2,); args=(2,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (80,); args=(80,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (80,); args=(80,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (2,); args=(2,)
(0.002) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (10,); args=(10,)
(0.002) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (70,); args=(70,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (70,); args=(70,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (70,); args=(70,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (70,); args=(70,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (70,); args=(70,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (70,); args=(70,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (91,); args=(91,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (91,); args=(91,)
(0.002) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (51,); args=(51,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.002) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.008) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (10,); args=(10,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (47,); args=(47,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (47,); args=(47,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.002) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (47,); args=(47,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (47,); args=(47,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (80,); args=(80,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (2,); args=(2,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (47,); args=(47,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (47,); args=(47,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (10,); args=(10,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (80,); args=(80,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (47,); args=(47,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (10,); args=(10,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.003) QUERY = 'SELECT [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] WHERE [Auditorium].[Id] = %s' - PARAMS = (151,); args=(151,)
(0.003) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building]' - PARAMS = (); args=()
(0.002) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (41,); args=(41,)
(0.011) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.016) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building] WHERE [Building].[Id] = %s' - PARAMS = (1,); args=(1,)
(0.000) QUERY = 'SELECT [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] WHERE [Auditorium].[Id] = %s' - PARAMS = (151,); args=(151,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType]' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department]' - PARAMS = (); args=()
(0.004) QUERY = 'SELECT [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] WHERE [Auditorium].[Id] = %s' - PARAMS = (151,); args=(151,)
(0.002) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.004) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building]' - PARAMS = (); args=()
(0.003) QUERY = 'SELECT TOP 50 [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] ORDER BY [Auditorium].[BuildingId] ASC' - PARAMS = (); args=()
(0.003) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (85,); args=(85,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (54,); args=(54,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (41,); args=(41,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (10,); args=(10,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (10,); args=(10,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (74,); args=(74,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (2,); args=(2,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (73,); args=(73,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (50,); args=(50,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (107,); args=(107,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.062) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 4, 4, 765724)); args=('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 4, 4, 765724))
(0.002) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.024) QUERY = 'SELECT TOP 10 [django_admin_log].[id], [django_admin_log].[action_time], [django_admin_log].[user_id], [django_admin_log].[content_type_id], [django_admin_log].[object_id], [django_admin_log].[object_repr], [django_admin_log].[action_flag], [django_admin_log].[change_message], [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined], [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_admin_log] INNER JOIN [auth_user] ON ([django_admin_log].[user_id] = [auth_user].[id]) LEFT OUTER JOIN [django_content_type] ON ([django_admin_log].[content_type_id] = [django_content_type].[id]) WHERE [django_admin_log].[user_id] = %s ORDER BY [django_admin_log].[action_time] DESC' - PARAMS = (1,); args=(1,)
(0.000) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 4, 14, 514252)); args=('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 4, 14, 514252))
(0.001) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.002) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.002) QUERY = 'SELECT TOP 100 [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] ORDER BY [Auditorium].[Id] DESC' - PARAMS = (); args=()
(0.002) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 4, 14, 826743)); args=('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 4, 14, 826743))
(0.001) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.001) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.002) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT TOP 100 [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] ORDER BY [Auditorium].[Id] DESC' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 4, 15, 620268)); args=('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 4, 15, 620268))
(0.000) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.004) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 4, 21, 999254)); args=('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 4, 21, 999254))
(0.002) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.002) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.076) QUERY = 'SELECT [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] ORDER BY [Auditorium].[Id] DESC OFFSET 500 ROWS FETCH FIRST 61 ROWS ONLY' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 4, 22, 390382)); args=('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 4, 22, 390382))
(0.001) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.002) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 4, 34, 86736)); args=('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 4, 34, 86736))
(0.002) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.002) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.002) QUERY = 'SELECT TOP 100 [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] ORDER BY [Auditorium].[Id] DESC' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 4, 34, 535034)); args=('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 4, 34, 535034))
(0.000) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.001) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 4, 52, 911942)); args=('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 4, 52, 911942))
(0.000) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.001) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.075) QUERY = 'SELECT [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] ORDER BY [Auditorium].[Id] DESC OFFSET 100 ROWS FETCH FIRST 100 ROWS ONLY' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 4, 53, 421145)); args=('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 4, 53, 421145))
(0.001) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.000) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 5, 0, 448838)); args=('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 5, 0, 448838))
(0.000) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.001) QUERY = 'SELECT [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] WHERE [Auditorium].[Id] = %s' - PARAMS = (454,); args=(454,)
(0.019) QUERY = 'SELECT [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_content_type] WHERE ([django_content_type].[app_label] = %s AND [django_content_type].[model] = %s)' - PARAMS = ('auditorium', 'auditorium'); args=('auditorium', 'auditorium')
(0.000) QUERY = 'SELECT [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_content_type] WHERE ([django_content_type].[app_label] = %s AND [django_content_type].[model] = %s)' - PARAMS = ('auditorium', 'auditorium'); args=('auditorium', 'auditorium')
(0.000) QUERY = 'SELECT @@TRANCOUNT' - PARAMS = (); args=None
(0.044) QUERY = 'SAVE TRANSACTION s6872_x1' - PARAMS = (); args=None
(0.028) QUERY = 'SET NOCOUNT ON INSERT INTO [django_content_type] ([app_label], [model]) VALUES (%s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = ('auditorium', 'auditorium'); args=('auditorium', 'auditorium')
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department]' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType]' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building]' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 5, 0, 870295)); args=('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 5, 0, 870295))
(0.000) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.001) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 5, 4, 538109)); args=('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 5, 4, 538109))
(0.001) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.001) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] ORDER BY [Auditorium].[Id] DESC OFFSET 100 ROWS FETCH FIRST 100 ROWS ONLY' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 5, 14, 688590)); args=('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 5, 14, 688590))
(0.000) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.000) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.262) QUERY = 'SELECT [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] WHERE [Auditorium].[Id] IN (%s, %s) ORDER BY [Auditorium].[Id] DESC' - PARAMS = (453, 454); args=(453, 454)
(0.000) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 5, 16, 826408)); args=('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 5, 16, 826408))
(0.000) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.000) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] WHERE [Auditorium].[Id] IN (%s, %s) ORDER BY [Auditorium].[Id] DESC' - PARAMS = (453, 454); args=(453, 454)
(0.048) QUERY = 'SET NOCOUNT ON INSERT INTO [django_admin_log] ([action_time], [user_id], [content_type_id], [object_id], [object_repr], [action_flag], [change_message]) VALUES (%s, %s, %s, %s, %s, %s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = (datetime.datetime(2018, 5, 7, 6, 5, 16), 1, 7, '454', 'htfgh', 3, ''); args=(datetime.datetime(2018, 5, 7, 6, 5, 16), 1, 7, '454', 'htfgh', 3, '')
(0.001) QUERY = 'SET NOCOUNT ON INSERT INTO [django_admin_log] ([action_time], [user_id], [content_type_id], [object_id], [object_repr], [action_flag], [change_message]) VALUES (%s, %s, %s, %s, %s, %s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = (datetime.datetime(2018, 5, 7, 6, 5, 16), 1, 7, '453', 'htfgh', 3, ''); args=(datetime.datetime(2018, 5, 7, 6, 5, 16), 1, 7, '453', 'htfgh', 3, '')
(0.048) QUERY = 'SET NOCOUNT OFF; DELETE FROM [Auditorium] WHERE [Auditorium].[Id] IN (%s, %s)' - PARAMS = (453, 454); args=(453, 454)
(0.001) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 5, 16, 955444)); args=('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 5, 16, 955444))
(0.001) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.001) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] ORDER BY [Auditorium].[Id] DESC OFFSET 100 ROWS FETCH FIRST 100 ROWS ONLY' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 5, 17, 384732)); args=('bwxshvlbu6lqdi2occz53tdwknfa380h', datetime.datetime(2018, 5, 7, 6, 5, 17, 384732))
(0.001) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.002) QUERY = 'SELECT [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] WHERE [Auditorium].[Id] = %s' - PARAMS = (444,); args=(444,)
(0.003) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building]' - PARAMS = (); args=()
(0.002) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.005) QUERY = 'SELECT [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] WHERE [Auditorium].[Id] = %s' - PARAMS = (450,); args=(450,)
(0.002) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building]' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.002) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.002) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building]' - PARAMS = (); args=()
(0.006) QUERY = 'SELECT TOP 50 [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] ORDER BY [Auditorium].[BuildingId] ASC' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.002) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.004) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (85,); args=(85,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.003) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (54,); args=(54,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (41,); args=(41,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.005) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (10,); args=(10,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.007) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (10,); args=(10,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (74,); args=(74,)
(0.009) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.003) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.008) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.003) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.007) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.004) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.009) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.013) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.031) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.005) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (2,); args=(2,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (73,); args=(73,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.002) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (50,); args=(50,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.002) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.002) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.002) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (107,); args=(107,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.018) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.081) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.093) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.025) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.007) QUERY = 'SELECT [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] WHERE [Auditorium].[Id] = %s' - PARAMS = (452,); args=(452,)
(0.001) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building]' - PARAMS = (); args=()
(0.003) QUERY = 'SELECT [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] WHERE [Auditorium].[Id] = %s' - PARAMS = (448,); args=(448,)
(0.006) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building]' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.002) QUERY = 'SELECT [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] WHERE [Auditorium].[Id] = %s' - PARAMS = (448,); args=(448,)
(0.001) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building]' - PARAMS = (); args=()
(0.007) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] WHERE [Auditorium].[Id] = %s' - PARAMS = (448,); args=(448,)
(0.003) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType]' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department]' - PARAMS = (); args=()
(0.004) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building]' - PARAMS = (); args=()
(0.006) QUERY = 'SELECT TOP 50 [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] ORDER BY [Auditorium].[BuildingId] ASC' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (85,); args=(85,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (54,); args=(54,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (41,); args=(41,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (10,); args=(10,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (10,); args=(10,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (74,); args=(74,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (2,); args=(2,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (73,); args=(73,)
(0.002) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.003) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (50,); args=(50,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.003) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (107,); args=(107,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.002) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.075) QUERY = "SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium] WHERE UPPER([Auditorium].[Name]) LIKE UPPER(%s) ESCAPE '\\'" - PARAMS = ('%152%',); args=('%152%',)
(0.001) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building]' - PARAMS = (); args=()
(0.006) QUERY = "SELECT TOP 2 [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] WHERE UPPER([Auditorium].[Name]) LIKE UPPER(%s) ESCAPE '\\' ORDER BY [Auditorium].[BuildingId] ASC" - PARAMS = ('%152%',); args=('%152%',)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (41,); args=(41,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (41,); args=(41,)
(0.001) QUERY = 'SELECT [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] WHERE [Auditorium].[Id] = %s' - PARAMS = (151,); args=(151,)
(0.002) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building]' - PARAMS = (); args=()
(0.003) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (41,); args=(41,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.002) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building] WHERE [Building].[Id] = %s' - PARAMS = (1,); args=(1,)
(0.002) QUERY = 'SELECT [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] WHERE [Auditorium].[Id] = %s' - PARAMS = (151,); args=(151,)
(0.001) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building]' - PARAMS = (); args=()
(0.003) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (41,); args=(41,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.001) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building] WHERE [Building].[Id] = %s' - PARAMS = (1,); args=(1,)
(0.000) QUERY = "SELECT CAST(SERVERPROPERTY('ProductVersion') AS varchar)" - PARAMS = (); args=None
(0.156) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.047) QUERY = 'SELECT [django_migrations].[app], [django_migrations].[name] FROM [django_migrations]' - PARAMS = (); args=()
(0.060) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.028) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building]' - PARAMS = (); args=()
(0.028) QUERY = 'SELECT TOP 50 [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] ORDER BY [Auditorium].[BuildingId] ASC' - PARAMS = (); args=()
(0.124) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.004) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.004) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (85,); args=(85,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.004) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (54,); args=(54,)
(0.004) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (41,); args=(41,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (10,); args=(10,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.004) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (10,); args=(10,)
(0.004) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (74,); args=(74,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.004) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.004) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (2,); args=(2,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.004) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (73,); args=(73,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.004) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.004) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (50,); args=(50,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (107,); args=(107,)
(0.004) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.012) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.041) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[username] = %s' - PARAMS = ('admin',); args=('admin',)
(0.036) QUERY = 'SELECT TOP 1 (1) AS [a] FROM [django_session] WHERE [django_session].[session_key] = %s' - PARAMS = ('04pokpbxei1h7bzi1oofyr80ogejexs8',); args=('04pokpbxei1h7bzi1oofyr80ogejexs8',)
(0.048) QUERY = 'INSERT INTO [django_session] ([session_key], [session_data], [expire_date]) VALUES (%s, %s, %s)' - PARAMS = ('04pokpbxei1h7bzi1oofyr80ogejexs8', 'MmNhNTI5MzQwMmM2ZmM5MTNiNzllM2I4MDg2YzQyZDY3OWMxZGU5MDp7fQ==', datetime.datetime(2018, 5, 21, 10, 37, 45)); args=('04pokpbxei1h7bzi1oofyr80ogejexs8', 'MmNhNTI5MzQwMmM2ZmM5MTNiNzllM2I4MDg2YzQyZDY3OWMxZGU5MDp7fQ==', datetime.datetime(2018, 5, 21, 10, 37, 45))
(0.048) QUERY = 'SET NOCOUNT OFF; UPDATE [auth_user] SET [last_login] = %s WHERE [auth_user].[id] = %s' - PARAMS = (datetime.datetime(2018, 5, 7, 10, 37, 45), 1); args=(datetime.datetime(2018, 5, 7, 10, 37, 45), 1)
(0.056) QUERY = 'SET NOCOUNT OFF; UPDATE [django_session] SET [session_data] = %s, [expire_date] = %s WHERE [django_session].[session_key] = %s' - PARAMS = ('NTY0OTZlZTI1ODRlN2RjYTRkYzhiNjdjODZiZTg0ZGFmNmJlMmY2Mzp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3YWFmOTBhMWNmYmQ0MzdjNWQwYWFkZTNiM2YwMmI4MDc3NWFkNzczIn0=', datetime.datetime(2018, 5, 21, 10, 37, 45), '04pokpbxei1h7bzi1oofyr80ogejexs8'); args=('NTY0OTZlZTI1ODRlN2RjYTRkYzhiNjdjODZiZTg0ZGFmNmJlMmY2Mzp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiI3YWFmOTBhMWNmYmQ0MzdjNWQwYWFkZTNiM2YwMmI4MDc3NWFkNzczIn0=', datetime.datetime(2018, 5, 21, 10, 37, 45), '04pokpbxei1h7bzi1oofyr80ogejexs8')
(0.124) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('04pokpbxei1h7bzi1oofyr80ogejexs8', datetime.datetime(2018, 5, 7, 10, 37, 45, 564688)); args=('04pokpbxei1h7bzi1oofyr80ogejexs8', datetime.datetime(2018, 5, 7, 10, 37, 45, 564688))
(0.004) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.148) QUERY = 'SELECT TOP 10 [django_admin_log].[id], [django_admin_log].[action_time], [django_admin_log].[user_id], [django_admin_log].[content_type_id], [django_admin_log].[object_id], [django_admin_log].[object_repr], [django_admin_log].[action_flag], [django_admin_log].[change_message], [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined], [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_admin_log] INNER JOIN [auth_user] ON ([django_admin_log].[user_id] = [auth_user].[id]) LEFT OUTER JOIN [django_content_type] ON ([django_admin_log].[content_type_id] = [django_content_type].[id]) WHERE [django_admin_log].[user_id] = %s ORDER BY [django_admin_log].[action_time] DESC' - PARAMS = (1,); args=(1,)
(0.000) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('04pokpbxei1h7bzi1oofyr80ogejexs8', datetime.datetime(2018, 5, 7, 10, 37, 58, 15783)); args=('04pokpbxei1h7bzi1oofyr80ogejexs8', datetime.datetime(2018, 5, 7, 10, 37, 58, 15783))
(0.000) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.000) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('04pokpbxei1h7bzi1oofyr80ogejexs8', datetime.datetime(2018, 5, 7, 10, 38, 1, 973928)); args=('04pokpbxei1h7bzi1oofyr80ogejexs8', datetime.datetime(2018, 5, 7, 10, 38, 1, 973928))
(0.000) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.000) QUERY = 'SELECT TOP 10 [django_admin_log].[id], [django_admin_log].[action_time], [django_admin_log].[user_id], [django_admin_log].[content_type_id], [django_admin_log].[object_id], [django_admin_log].[object_repr], [django_admin_log].[action_flag], [django_admin_log].[change_message], [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined], [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_admin_log] INNER JOIN [auth_user] ON ([django_admin_log].[user_id] = [auth_user].[id]) LEFT OUTER JOIN [django_content_type] ON ([django_admin_log].[content_type_id] = [django_content_type].[id]) WHERE [django_admin_log].[user_id] = %s ORDER BY [django_admin_log].[action_time] DESC' - PARAMS = (1,); args=(1,)
(0.000) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('04pokpbxei1h7bzi1oofyr80ogejexs8', datetime.datetime(2018, 5, 7, 10, 38, 10, 980371)); args=('04pokpbxei1h7bzi1oofyr80ogejexs8', datetime.datetime(2018, 5, 7, 10, 38, 10, 980371))
(0.000) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.000) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('04pokpbxei1h7bzi1oofyr80ogejexs8', datetime.datetime(2018, 5, 7, 10, 38, 14, 749921)); args=('04pokpbxei1h7bzi1oofyr80ogejexs8', datetime.datetime(2018, 5, 7, 10, 38, 14, 749921))
(0.004) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.000) QUERY = 'SELECT TOP 10 [django_admin_log].[id], [django_admin_log].[action_time], [django_admin_log].[user_id], [django_admin_log].[content_type_id], [django_admin_log].[object_id], [django_admin_log].[object_repr], [django_admin_log].[action_flag], [django_admin_log].[change_message], [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined], [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_admin_log] INNER JOIN [auth_user] ON ([django_admin_log].[user_id] = [auth_user].[id]) LEFT OUTER JOIN [django_content_type] ON ([django_admin_log].[content_type_id] = [django_content_type].[id]) WHERE [django_admin_log].[user_id] = %s ORDER BY [django_admin_log].[action_time] DESC' - PARAMS = (1,); args=(1,)
(0.008) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('04pokpbxei1h7bzi1oofyr80ogejexs8', datetime.datetime(2018, 5, 7, 10, 39, 19, 490227)); args=('04pokpbxei1h7bzi1oofyr80ogejexs8', datetime.datetime(2018, 5, 7, 10, 39, 19, 490227))
(0.004) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.032) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Building]' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Building]' - PARAMS = (); args=()
(0.004) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building] ORDER BY [Building].[Id] DESC' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('04pokpbxei1h7bzi1oofyr80ogejexs8', datetime.datetime(2018, 5, 7, 10, 39, 19, 950238)); args=('04pokpbxei1h7bzi1oofyr80ogejexs8', datetime.datetime(2018, 5, 7, 10, 39, 19, 950238))
(0.000) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.000) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('04pokpbxei1h7bzi1oofyr80ogejexs8', datetime.datetime(2018, 5, 7, 10, 39, 22, 448452)); args=('04pokpbxei1h7bzi1oofyr80ogejexs8', datetime.datetime(2018, 5, 7, 10, 39, 22, 448452))
(0.000) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.000) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building] WHERE [Building].[Id] = %s' - PARAMS = (9,); args=(9,)
(0.028) QUERY = 'SELECT [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_content_type] WHERE ([django_content_type].[app_label] = %s AND [django_content_type].[model] = %s)' - PARAMS = ('auditorium', 'building'); args=('auditorium', 'building')
(0.000) QUERY = 'SELECT [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_content_type] WHERE ([django_content_type].[app_label] = %s AND [django_content_type].[model] = %s)' - PARAMS = ('auditorium', 'building'); args=('auditorium', 'building')
(0.000) QUERY = 'SELECT @@TRANCOUNT' - PARAMS = (); args=None
(0.012) QUERY = 'SAVE TRANSACTION s3576_x1' - PARAMS = (); args=None
(0.040) QUERY = 'SET NOCOUNT ON INSERT INTO [django_content_type] ([app_label], [model]) VALUES (%s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = ('auditorium', 'building'); args=('auditorium', 'building')
(0.004) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('04pokpbxei1h7bzi1oofyr80ogejexs8', datetime.datetime(2018, 5, 7, 10, 39, 23, 864484)); args=('04pokpbxei1h7bzi1oofyr80ogejexs8', datetime.datetime(2018, 5, 7, 10, 39, 23, 864484))
(0.000) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.000) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('04pokpbxei1h7bzi1oofyr80ogejexs8', datetime.datetime(2018, 5, 7, 10, 39, 28, 314718)); args=('04pokpbxei1h7bzi1oofyr80ogejexs8', datetime.datetime(2018, 5, 7, 10, 39, 28, 314718))
(0.000) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.000) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Building]' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Building]' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building] ORDER BY [Building].[Id] DESC' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('04pokpbxei1h7bzi1oofyr80ogejexs8', datetime.datetime(2018, 5, 7, 10, 39, 29, 733855)); args=('04pokpbxei1h7bzi1oofyr80ogejexs8', datetime.datetime(2018, 5, 7, 10, 39, 29, 733855))
(0.000) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.004) QUERY = 'SELECT TOP 10 [django_admin_log].[id], [django_admin_log].[action_time], [django_admin_log].[user_id], [django_admin_log].[content_type_id], [django_admin_log].[object_id], [django_admin_log].[object_repr], [django_admin_log].[action_flag], [django_admin_log].[change_message], [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined], [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_admin_log] INNER JOIN [auth_user] ON ([django_admin_log].[user_id] = [auth_user].[id]) LEFT OUTER JOIN [django_content_type] ON ([django_admin_log].[content_type_id] = [django_content_type].[id]) WHERE [django_admin_log].[user_id] = %s ORDER BY [django_admin_log].[action_time] DESC' - PARAMS = (1,); args=(1,)
(0.016) QUERY = "SELECT CAST(SERVERPROPERTY('ProductVersion') AS varchar)" - PARAMS = (); args=None
(0.016) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
CREATE TABLE [django_migrations] ([id] int IDENTITY (1, 1) NOT NULL PRIMARY KEY, [app] nvarchar(255) NOT NULL, [name] nvarchar(255) NOT NULL, [applied] datetime NOT NULL); (params None)
(0.000) QUERY = 'CREATE TABLE [django_migrations] ([id] int IDENTITY (1, 1) NOT NULL PRIMARY KEY, [app] nvarchar(255) NOT NULL, [name] nvarchar(255) NOT NULL, [applied] datetime NOT NULL)' - PARAMS = (); args=None
(0.000) QUERY = 'SELECT [django_migrations].[app], [django_migrations].[name] FROM [django_migrations]' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.000) QUERY = 'SELECT [django_migrations].[app], [django_migrations].[name] FROM [django_migrations]' - PARAMS = (); args=()
CREATE TABLE [django_content_type] ([id] int IDENTITY (1, 1) NOT NULL PRIMARY KEY, [name] nvarchar(100) NOT NULL, [app_label] nvarchar(100) NOT NULL, [model] nvarchar(100) NOT NULL); (params None)
(0.000) QUERY = 'CREATE TABLE [django_content_type] ([id] int IDENTITY (1, 1) NOT NULL PRIMARY KEY, [name] nvarchar(100) NOT NULL, [app_label] nvarchar(100) NOT NULL, [model] nvarchar(100) NOT NULL)' - PARAMS = (); args=None
ALTER TABLE [django_content_type] ADD CONSTRAINT [django_content_type_app_label_model_76bd3d3b_uniq] UNIQUE ([app_label], [model]); (params ())
(0.000) QUERY = 'ALTER TABLE [django_content_type] ADD CONSTRAINT [django_content_type_app_label_model_76bd3d3b_uniq] UNIQUE ([app_label], [model])' - PARAMS = (); args=()
(0.016) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.094) QUERY = 'SET NOCOUNT ON INSERT INTO [django_migrations] ([app], [name], [applied]) VALUES (%s, %s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = ('contenttypes', '0001_initial', datetime.datetime(2018, 5, 9, 17, 46, 26)); args=('contenttypes', '0001_initial', datetime.datetime(2018, 5, 9, 17, 46, 26))
CREATE TABLE [auth_permission] ([id] int IDENTITY (1, 1) NOT NULL PRIMARY KEY, [name] nvarchar(50) NOT NULL, [content_type_id] int NOT NULL, [codename] nvarchar(100) NOT NULL); (params None)
(0.016) QUERY = 'CREATE TABLE [auth_permission] ([id] int IDENTITY (1, 1) NOT NULL PRIMARY KEY, [name] nvarchar(50) NOT NULL, [content_type_id] int NOT NULL, [codename] nvarchar(100) NOT NULL)' - PARAMS = (); args=None
CREATE TABLE [auth_group] ([id] int IDENTITY (1, 1) NOT NULL PRIMARY KEY, [name] nvarchar(80) NOT NULL UNIQUE); (params None)
(0.016) QUERY = 'CREATE TABLE [auth_group] ([id] int IDENTITY (1, 1) NOT NULL PRIMARY KEY, [name] nvarchar(80) NOT NULL UNIQUE)' - PARAMS = (); args=None
CREATE TABLE [auth_group_permissions] ([id] int IDENTITY (1, 1) NOT NULL PRIMARY KEY, [group_id] int NOT NULL, [permission_id] int NOT NULL); (params None)
(0.000) QUERY = 'CREATE TABLE [auth_group_permissions] ([id] int IDENTITY (1, 1) NOT NULL PRIMARY KEY, [group_id] int NOT NULL, [permission_id] int NOT NULL)' - PARAMS = (); args=None
CREATE TABLE [auth_user] ([id] int IDENTITY (1, 1) NOT NULL PRIMARY KEY, [password] nvarchar(128) NOT NULL, [last_login] datetime NOT NULL, [is_superuser] bit NOT NULL, [username] nvarchar(30) NOT NULL UNIQUE, [first_name] nvarchar(30) NOT NULL, [last_name] nvarchar(30) NOT NULL, [email] nvarchar(75) NOT NULL, [is_staff] bit NOT NULL, [is_active] bit NOT NULL, [date_joined] datetime NOT NULL); (params None)
(0.016) QUERY = 'CREATE TABLE [auth_user] ([id] int IDENTITY (1, 1) NOT NULL PRIMARY KEY, [password] nvarchar(128) NOT NULL, [last_login] datetime NOT NULL, [is_superuser] bit NOT NULL, [username] nvarchar(30) NOT NULL UNIQUE, [first_name] nvarchar(30) NOT NULL, [last_name] nvarchar(30) NOT NULL, [email] nvarchar(75) NOT NULL, [is_staff] bit NOT NULL, [is_active] bit NOT NULL, [date_joined] datetime NOT NULL)' - PARAMS = (); args=None
CREATE TABLE [auth_user_groups] ([id] int IDENTITY (1, 1) NOT NULL PRIMARY KEY, [user_id] int NOT NULL, [group_id] int NOT NULL); (params None)
(0.000) QUERY = 'CREATE TABLE [auth_user_groups] ([id] int IDENTITY (1, 1) NOT NULL PRIMARY KEY, [user_id] int NOT NULL, [group_id] int NOT NULL)' - PARAMS = (); args=None
CREATE TABLE [auth_user_user_permissions] ([id] int IDENTITY (1, 1) NOT NULL PRIMARY KEY, [user_id] int NOT NULL, [permission_id] int NOT NULL); (params None)
(0.047) QUERY = 'CREATE TABLE [auth_user_user_permissions] ([id] int IDENTITY (1, 1) NOT NULL PRIMARY KEY, [user_id] int NOT NULL, [permission_id] int NOT NULL)' - PARAMS = (); args=None
ALTER TABLE [auth_permission] ADD CONSTRAINT [auth_permission_content_type_id_2f476e4b_fk_django_content_type_id] FOREIGN KEY ([content_type_id]) REFERENCES [django_content_type] ([id]); (params ())
(0.000) QUERY = 'ALTER TABLE [auth_permission] ADD CONSTRAINT [auth_permission_content_type_id_2f476e4b_fk_django_content_type_id] FOREIGN KEY ([content_type_id]) REFERENCES [django_content_type] ([id])' - PARAMS = (); args=()
ALTER TABLE [auth_permission] ADD CONSTRAINT [auth_permission_content_type_id_codename_01ab375a_uniq] UNIQUE ([content_type_id], [codename]); (params ())
(0.000) QUERY = 'ALTER TABLE [auth_permission] ADD CONSTRAINT [auth_permission_content_type_id_codename_01ab375a_uniq] UNIQUE ([content_type_id], [codename])' - PARAMS = (); args=()
CREATE INDEX [auth_permission_content_type_id_2f476e4b] ON [auth_permission] ([content_type_id]); (params ())
(0.000) QUERY = 'CREATE INDEX [auth_permission_content_type_id_2f476e4b] ON [auth_permission] ([content_type_id])' - PARAMS = (); args=()
ALTER TABLE [auth_group_permissions] ADD CONSTRAINT [auth_group_permissions_group_id_b120cbf9_fk_auth_group_id] FOREIGN KEY ([group_id]) REFERENCES [auth_group] ([id]); (params ())
(0.000) QUERY = 'ALTER TABLE [auth_group_permissions] ADD CONSTRAINT [auth_group_permissions_group_id_b120cbf9_fk_auth_group_id] FOREIGN KEY ([group_id]) REFERENCES [auth_group] ([id])' - PARAMS = (); args=()
ALTER TABLE [auth_group_permissions] ADD CONSTRAINT [auth_group_permissions_permission_id_84c5c92e_fk_auth_permission_id] FOREIGN KEY ([permission_id]) REFERENCES [auth_permission] ([id]); (params ())
(0.000) QUERY = 'ALTER TABLE [auth_group_permissions] ADD CONSTRAINT [auth_group_permissions_permission_id_84c5c92e_fk_auth_permission_id] FOREIGN KEY ([permission_id]) REFERENCES [auth_permission] ([id])' - PARAMS = (); args=()
ALTER TABLE [auth_group_permissions] ADD CONSTRAINT [auth_group_permissions_group_id_permission_id_0cd325b0_uniq] UNIQUE ([group_id], [permission_id]); (params ())
(0.000) QUERY = 'ALTER TABLE [auth_group_permissions] ADD CONSTRAINT [auth_group_permissions_group_id_permission_id_0cd325b0_uniq] UNIQUE ([group_id], [permission_id])' - PARAMS = (); args=()
CREATE INDEX [auth_group_permissions_group_id_b120cbf9] ON [auth_group_permissions] ([group_id]); (params ())
(0.000) QUERY = 'CREATE INDEX [auth_group_permissions_group_id_b120cbf9] ON [auth_group_permissions] ([group_id])' - PARAMS = (); args=()
CREATE INDEX [auth_group_permissions_permission_id_84c5c92e] ON [auth_group_permissions] ([permission_id]); (params ())
(0.000) QUERY = 'CREATE INDEX [auth_group_permissions_permission_id_84c5c92e] ON [auth_group_permissions] ([permission_id])' - PARAMS = (); args=()
ALTER TABLE [auth_user_groups] ADD CONSTRAINT [auth_user_groups_user_id_6a12ed8b_fk_auth_user_id] FOREIGN KEY ([user_id]) REFERENCES [auth_user] ([id]); (params ())
(0.016) QUERY = 'ALTER TABLE [auth_user_groups] ADD CONSTRAINT [auth_user_groups_user_id_6a12ed8b_fk_auth_user_id] FOREIGN KEY ([user_id]) REFERENCES [auth_user] ([id])' - PARAMS = (); args=()
ALTER TABLE [auth_user_groups] ADD CONSTRAINT [auth_user_groups_group_id_97559544_fk_auth_group_id] FOREIGN KEY ([group_id]) REFERENCES [auth_group] ([id]); (params ())
(0.000) QUERY = 'ALTER TABLE [auth_user_groups] ADD CONSTRAINT [auth_user_groups_group_id_97559544_fk_auth_group_id] FOREIGN KEY ([group_id]) REFERENCES [auth_group] ([id])' - PARAMS = (); args=()
ALTER TABLE [auth_user_groups] ADD CONSTRAINT [auth_user_groups_user_id_group_id_94350c0c_uniq] UNIQUE ([user_id], [group_id]); (params ())
(0.000) QUERY = 'ALTER TABLE [auth_user_groups] ADD CONSTRAINT [auth_user_groups_user_id_group_id_94350c0c_uniq] UNIQUE ([user_id], [group_id])' - PARAMS = (); args=()
CREATE INDEX [auth_user_groups_user_id_6a12ed8b] ON [auth_user_groups] ([user_id]); (params ())
(0.000) QUERY = 'CREATE INDEX [auth_user_groups_user_id_6a12ed8b] ON [auth_user_groups] ([user_id])' - PARAMS = (); args=()
CREATE INDEX [auth_user_groups_group_id_97559544] ON [auth_user_groups] ([group_id]); (params ())
(0.000) QUERY = 'CREATE INDEX [auth_user_groups_group_id_97559544] ON [auth_user_groups] ([group_id])' - PARAMS = (); args=()
ALTER TABLE [auth_user_user_permissions] ADD CONSTRAINT [auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id] FOREIGN KEY ([user_id]) REFERENCES [auth_user] ([id]); (params ())
(0.000) QUERY = 'ALTER TABLE [auth_user_user_permissions] ADD CONSTRAINT [auth_user_user_permissions_user_id_a95ead1b_fk_auth_user_id] FOREIGN KEY ([user_id]) REFERENCES [auth_user] ([id])' - PARAMS = (); args=()
ALTER TABLE [auth_user_user_permissions] ADD CONSTRAINT [auth_user_user_permissions_permission_id_1fbb5f2c_fk_auth_permission_id] FOREIGN KEY ([permission_id]) REFERENCES [auth_permission] ([id]); (params ())
(0.000) QUERY = 'ALTER TABLE [auth_user_user_permissions] ADD CONSTRAINT [auth_user_user_permissions_permission_id_1fbb5f2c_fk_auth_permission_id] FOREIGN KEY ([permission_id]) REFERENCES [auth_permission] ([id])' - PARAMS = (); args=()
ALTER TABLE [auth_user_user_permissions] ADD CONSTRAINT [auth_user_user_permissions_user_id_permission_id_14a6b632_uniq] UNIQUE ([user_id], [permission_id]); (params ())
(0.000) QUERY = 'ALTER TABLE [auth_user_user_permissions] ADD CONSTRAINT [auth_user_user_permissions_user_id_permission_id_14a6b632_uniq] UNIQUE ([user_id], [permission_id])' - PARAMS = (); args=()
CREATE INDEX [auth_user_user_permissions_user_id_a95ead1b] ON [auth_user_user_permissions] ([user_id]); (params ())
(0.000) QUERY = 'CREATE INDEX [auth_user_user_permissions_user_id_a95ead1b] ON [auth_user_user_permissions] ([user_id])' - PARAMS = (); args=()
CREATE INDEX [auth_user_user_permissions_permission_id_1fbb5f2c] ON [auth_user_user_permissions] ([permission_id]); (params ())
(0.000) QUERY = 'CREATE INDEX [auth_user_user_permissions_permission_id_1fbb5f2c] ON [auth_user_user_permissions] ([permission_id])' - PARAMS = (); args=()
(0.016) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.000) QUERY = 'SET NOCOUNT ON INSERT INTO [django_migrations] ([app], [name], [applied]) VALUES (%s, %s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = ('auth', '0001_initial', datetime.datetime(2018, 5, 9, 17, 46, 26)); args=('auth', '0001_initial', datetime.datetime(2018, 5, 9, 17, 46, 26))
CREATE TABLE [django_admin_log] ([id] int IDENTITY (1, 1) NOT NULL PRIMARY KEY, [action_time] datetime NOT NULL, [object_id] nvarchar(max) NULL, [object_repr] nvarchar(200) NOT NULL, [action_flag] smallint NOT NULL CONSTRAINT django_admin_log_action_flag_a8637d59_check CHECK ([action_flag] >= 0), [change_message] nvarchar(max) NOT NULL, [content_type_id] int NULL, [user_id] int NOT NULL); (params None)
(0.016) QUERY = 'CREATE TABLE [django_admin_log] ([id] int IDENTITY (1, 1) NOT NULL PRIMARY KEY, [action_time] datetime NOT NULL, [object_id] nvarchar(max) NULL, [object_repr] nvarchar(200) NOT NULL, [action_flag] smallint NOT NULL CONSTRAINT django_admin_log_action_flag_a8637d59_check CHECK ([action_flag] >= 0), [change_message] nvarchar(max) NOT NULL, [content_type_id] int NULL, [user_id] int NOT NULL)' - PARAMS = (); args=None
ALTER TABLE [django_admin_log] ADD CONSTRAINT [django_admin_log_content_type_id_c4bce8eb_fk_django_content_type_id] FOREIGN KEY ([content_type_id]) REFERENCES [django_content_type] ([id]); (params ())
(0.000) QUERY = 'ALTER TABLE [django_admin_log] ADD CONSTRAINT [django_admin_log_content_type_id_c4bce8eb_fk_django_content_type_id] FOREIGN KEY ([content_type_id]) REFERENCES [django_content_type] ([id])' - PARAMS = (); args=()
ALTER TABLE [django_admin_log] ADD CONSTRAINT [django_admin_log_user_id_c564eba6_fk_auth_user_id] FOREIGN KEY ([user_id]) REFERENCES [auth_user] ([id]); (params ())
(0.000) QUERY = 'ALTER TABLE [django_admin_log] ADD CONSTRAINT [django_admin_log_user_id_c564eba6_fk_auth_user_id] FOREIGN KEY ([user_id]) REFERENCES [auth_user] ([id])' - PARAMS = (); args=()
CREATE INDEX [django_admin_log_content_type_id_c4bce8eb] ON [django_admin_log] ([content_type_id]); (params ())
(0.000) QUERY = 'CREATE INDEX [django_admin_log_content_type_id_c4bce8eb] ON [django_admin_log] ([content_type_id])' - PARAMS = (); args=()
CREATE INDEX [django_admin_log_user_id_c564eba6] ON [django_admin_log] ([user_id]); (params ())
(0.000) QUERY = 'CREATE INDEX [django_admin_log_user_id_c564eba6] ON [django_admin_log] ([user_id])' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.000) QUERY = 'SET NOCOUNT ON INSERT INTO [django_migrations] ([app], [name], [applied]) VALUES (%s, %s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = ('admin', '0001_initial', datetime.datetime(2018, 5, 9, 17, 46, 26)); args=('admin', '0001_initial', datetime.datetime(2018, 5, 9, 17, 46, 26))
(0.016) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.000) QUERY = 'SET NOCOUNT ON INSERT INTO [django_migrations] ([app], [name], [applied]) VALUES (%s, %s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = ('admin', '0002_logentry_remove_auto_add', datetime.datetime(2018, 5, 9, 17, 46, 26)); args=('admin', '0002_logentry_remove_auto_add', datetime.datetime(2018, 5, 9, 17, 46, 26))
ALTER TABLE [django_content_type] ALTER COLUMN [name] nvarchar(100) NULL; (params [])
(0.078) QUERY = 'ALTER TABLE [django_content_type] ALTER COLUMN [name] nvarchar(100) NULL' - PARAMS = (); args=[]
(0.250) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('django_content_type',); args=['django_content_type']
(0.141) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('django_content_type',); args=['django_content_type']
(0.047) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('django_content_type',); args=['django_content_type']
ALTER TABLE [django_content_type] DROP COLUMN [name]; (params ())
(0.031) QUERY = 'ALTER TABLE [django_content_type] DROP COLUMN [name]' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.016) QUERY = 'SET NOCOUNT ON INSERT INTO [django_migrations] ([app], [name], [applied]) VALUES (%s, %s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = ('contenttypes', '0002_remove_content_type_name', datetime.datetime(2018, 5, 9, 17, 46, 27)); args=('contenttypes', '0002_remove_content_type_name', datetime.datetime(2018, 5, 9, 17, 46, 27))
ALTER TABLE [auth_permission] ALTER COLUMN [name] nvarchar(255) NOT NULL; (params [])
(0.000) QUERY = 'ALTER TABLE [auth_permission] ALTER COLUMN [name] nvarchar(255) NOT NULL' - PARAMS = (); args=[]
(0.016) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.000) QUERY = 'SET NOCOUNT ON INSERT INTO [django_migrations] ([app], [name], [applied]) VALUES (%s, %s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = ('auth', '0002_alter_permission_name_max_length', datetime.datetime(2018, 5, 9, 17, 46, 27)); args=('auth', '0002_alter_permission_name_max_length', datetime.datetime(2018, 5, 9, 17, 46, 27))
ALTER TABLE [auth_user] ALTER COLUMN [email] nvarchar(254) NOT NULL; (params [])
(0.000) QUERY = 'ALTER TABLE [auth_user] ALTER COLUMN [email] nvarchar(254) NOT NULL' - PARAMS = (); args=[]
(0.000) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.000) QUERY = 'SET NOCOUNT ON INSERT INTO [django_migrations] ([app], [name], [applied]) VALUES (%s, %s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = ('auth', '0003_alter_user_email_max_length', datetime.datetime(2018, 5, 9, 17, 46, 27)); args=('auth', '0003_alter_user_email_max_length', datetime.datetime(2018, 5, 9, 17, 46, 27))
(0.000) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.000) QUERY = 'SET NOCOUNT ON INSERT INTO [django_migrations] ([app], [name], [applied]) VALUES (%s, %s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = ('auth', '0004_alter_user_username_opts', datetime.datetime(2018, 5, 9, 17, 46, 27)); args=('auth', '0004_alter_user_username_opts', datetime.datetime(2018, 5, 9, 17, 46, 27))
ALTER TABLE [auth_user] ALTER COLUMN [last_login] datetime NULL; (params [])
(0.016) QUERY = 'ALTER TABLE [auth_user] ALTER COLUMN [last_login] datetime NULL' - PARAMS = (); args=[]
(0.000) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.000) QUERY = 'SET NOCOUNT ON INSERT INTO [django_migrations] ([app], [name], [applied]) VALUES (%s, %s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = ('auth', '0005_alter_user_last_login_null', datetime.datetime(2018, 5, 9, 17, 46, 27)); args=('auth', '0005_alter_user_last_login_null', datetime.datetime(2018, 5, 9, 17, 46, 27))
(0.000) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.016) QUERY = 'SET NOCOUNT ON INSERT INTO [django_migrations] ([app], [name], [applied]) VALUES (%s, %s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = ('auth', '0006_require_contenttypes_0002', datetime.datetime(2018, 5, 9, 17, 46, 27)); args=('auth', '0006_require_contenttypes_0002', datetime.datetime(2018, 5, 9, 17, 46, 27))
(0.016) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.000) QUERY = 'SET NOCOUNT ON INSERT INTO [django_migrations] ([app], [name], [applied]) VALUES (%s, %s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = ('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2018, 5, 9, 17, 46, 27)); args=('auth', '0007_alter_validators_add_error_messages', datetime.datetime(2018, 5, 9, 17, 46, 27))
(0.172) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('django_admin_log',); args=['django_admin_log']
(0.125) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('django_admin_log',); args=['django_admin_log']
(0.047) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('django_admin_log',); args=['django_admin_log']
ALTER TABLE [django_admin_log] DROP CONSTRAINT [django_admin_log_user_id_c564eba6_fk_auth_user_id]; (params ())
(0.000) QUERY = 'ALTER TABLE [django_admin_log] DROP CONSTRAINT [django_admin_log_user_id_c564eba6_fk_auth_user_id]' - PARAMS = (); args=()
(0.188) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_user',); args=['auth_user']
(0.125) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_user',); args=['auth_user']
(0.031) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_user',); args=['auth_user']
ALTER TABLE [auth_user] DROP CONSTRAINT [UQ__auth_use__F3DBC57289BF2FEB]; (params ())
(0.000) QUERY = 'ALTER TABLE [auth_user] DROP CONSTRAINT [UQ__auth_use__F3DBC57289BF2FEB]' - PARAMS = (); args=()
ALTER TABLE [auth_user] ALTER COLUMN [username] nvarchar(150) NOT NULL; (params [])
(0.000) QUERY = 'ALTER TABLE [auth_user] ALTER COLUMN [username] nvarchar(150) NOT NULL' - PARAMS = (); args=[]
ALTER TABLE [auth_user] ADD CONSTRAINT [auth_user_username_6821ab7c_uniq] UNIQUE ([username]); (params ())
(0.000) QUERY = 'ALTER TABLE [auth_user] ADD CONSTRAINT [auth_user_username_6821ab7c_uniq] UNIQUE ([username])' - PARAMS = (); args=()
ALTER TABLE [django_admin_log] ADD CONSTRAINT [django_admin_log_user_id_c564eba6_fk] FOREIGN KEY ([user_id]) REFERENCES [auth_user] ([id]); (params ())
(0.000) QUERY = 'ALTER TABLE [django_admin_log] ADD CONSTRAINT [django_admin_log_user_id_c564eba6_fk] FOREIGN KEY ([user_id]) REFERENCES [auth_user] ([id])' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.000) QUERY = 'SET NOCOUNT ON INSERT INTO [django_migrations] ([app], [name], [applied]) VALUES (%s, %s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = ('auth', '0008_alter_user_username_max_length', datetime.datetime(2018, 5, 9, 17, 46, 28)); args=('auth', '0008_alter_user_username_max_length', datetime.datetime(2018, 5, 9, 17, 46, 28))
CREATE TABLE [django_session] ([session_key] nvarchar(40) NOT NULL PRIMARY KEY, [session_data] nvarchar(max) NOT NULL, [expire_date] datetime NOT NULL); (params None)
(0.000) QUERY = 'CREATE TABLE [django_session] ([session_key] nvarchar(40) NOT NULL PRIMARY KEY, [session_data] nvarchar(max) NOT NULL, [expire_date] datetime NOT NULL)' - PARAMS = (); args=None
CREATE INDEX [django_session_expire_date_a5c62663] ON [django_session] ([expire_date]); (params ())
(0.000) QUERY = 'CREATE INDEX [django_session_expire_date_a5c62663] ON [django_session] ([expire_date])' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.000) QUERY = 'SET NOCOUNT ON INSERT INTO [django_migrations] ([app], [name], [applied]) VALUES (%s, %s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = ('sessions', '0001_initial', datetime.datetime(2018, 5, 9, 17, 46, 28)); args=('sessions', '0001_initial', datetime.datetime(2018, 5, 9, 17, 46, 28))
(0.016) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.000) QUERY = 'SELECT [django_migrations].[app], [django_migrations].[name] FROM [django_migrations]' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_content_type] WHERE ([django_content_type].[app_label] = %s AND [django_content_type].[model] = %s)' - PARAMS = ('admin', 'logentry'); args=('admin', 'logentry')
(0.000) QUERY = 'SELECT [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_content_type] WHERE ([django_content_type].[app_label] = %s AND [django_content_type].[model] = %s)' - PARAMS = ('admin', 'logentry'); args=('admin', 'logentry')
(0.000) QUERY = 'SET NOCOUNT ON INSERT INTO [django_content_type] ([app_label], [model]) VALUES (%s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = ('admin', 'logentry'); args=('admin', 'logentry')
(0.012) QUERY = 'SELECT [auth_permission].[content_type_id], [auth_permission].[codename] FROM [auth_permission] INNER JOIN [django_content_type] ON ([auth_permission].[content_type_id] = [django_content_type].[id]) WHERE [auth_permission].[content_type_id] IN (%s) ORDER BY [django_content_type].[app_label] ASC, [django_content_type].[model] ASC, [auth_permission].[codename] ASC' - PARAMS = (1,); args=(1,)
(0.022) QUERY = 'INSERT INTO [auth_permission] ([name], [content_type_id], [codename]) VALUES (%s, %s, %s), (%s, %s, %s), (%s, %s, %s)' - PARAMS = ('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry'); args=('Can add log entry', 1, 'add_logentry', 'Can change log entry', 1, 'change_logentry', 'Can delete log entry', 1, 'delete_logentry')
(0.016) QUERY = 'SELECT [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_content_type] WHERE [django_content_type].[app_label] = %s' - PARAMS = ('admin',); args=('admin',)
(0.000) QUERY = 'SELECT [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_content_type] WHERE ([django_content_type].[app_label] = %s AND [django_content_type].[model] = %s)' - PARAMS = ('auth', 'permission'); args=('auth', 'permission')
(0.000) QUERY = 'SELECT [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_content_type] WHERE ([django_content_type].[app_label] = %s AND [django_content_type].[model] = %s)' - PARAMS = ('auth', 'permission'); args=('auth', 'permission')
(0.000) QUERY = 'SET NOCOUNT ON INSERT INTO [django_content_type] ([app_label], [model]) VALUES (%s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = ('auth', 'permission'); args=('auth', 'permission')
(0.000) QUERY = 'SELECT [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_content_type] WHERE ([django_content_type].[app_label] = %s AND [django_content_type].[model] = %s)' - PARAMS = ('auth', 'group'); args=('auth', 'group')
(0.000) QUERY = 'SELECT [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_content_type] WHERE ([django_content_type].[app_label] = %s AND [django_content_type].[model] = %s)' - PARAMS = ('auth', 'group'); args=('auth', 'group')
(0.000) QUERY = 'SET NOCOUNT ON INSERT INTO [django_content_type] ([app_label], [model]) VALUES (%s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = ('auth', 'group'); args=('auth', 'group')
(0.000) QUERY = 'SELECT [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_content_type] WHERE ([django_content_type].[app_label] = %s AND [django_content_type].[model] = %s)' - PARAMS = ('auth', 'user'); args=('auth', 'user')
(0.000) QUERY = 'SELECT [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_content_type] WHERE ([django_content_type].[app_label] = %s AND [django_content_type].[model] = %s)' - PARAMS = ('auth', 'user'); args=('auth', 'user')
(0.016) QUERY = 'SET NOCOUNT ON INSERT INTO [django_content_type] ([app_label], [model]) VALUES (%s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = ('auth', 'user'); args=('auth', 'user')
(0.000) QUERY = 'SELECT [auth_permission].[content_type_id], [auth_permission].[codename] FROM [auth_permission] INNER JOIN [django_content_type] ON ([auth_permission].[content_type_id] = [django_content_type].[id]) WHERE [auth_permission].[content_type_id] IN (%s, %s, %s) ORDER BY [django_content_type].[app_label] ASC, [django_content_type].[model] ASC, [auth_permission].[codename] ASC' - PARAMS = (2, 3, 4); args=(2, 3, 4)
(0.000) QUERY = 'INSERT INTO [auth_permission] ([name], [content_type_id], [codename]) VALUES (%s, %s, %s), (%s, %s, %s), (%s, %s, %s), (%s, %s, %s), (%s, %s, %s), (%s, %s, %s), (%s, %s, %s), (%s, %s, %s), (%s, %s, %s)' - PARAMS = ('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user'); args=('Can add permission', 2, 'add_permission', 'Can change permission', 2, 'change_permission', 'Can delete permission', 2, 'delete_permission', 'Can add group', 3, 'add_group', 'Can change group', 3, 'change_group', 'Can delete group', 3, 'delete_group', 'Can add user', 4, 'add_user', 'Can change user', 4, 'change_user', 'Can delete user', 4, 'delete_user')
(0.016) QUERY = 'SELECT [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_content_type] WHERE [django_content_type].[app_label] = %s' - PARAMS = ('auth',); args=('auth',)
(0.000) QUERY = 'SELECT [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_content_type] WHERE ([django_content_type].[app_label] = %s AND [django_content_type].[model] = %s)' - PARAMS = ('contenttypes', 'contenttype'); args=('contenttypes', 'contenttype')
(0.000) QUERY = 'SELECT [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_content_type] WHERE ([django_content_type].[app_label] = %s AND [django_content_type].[model] = %s)' - PARAMS = ('contenttypes', 'contenttype'); args=('contenttypes', 'contenttype')
(0.000) QUERY = 'SET NOCOUNT ON INSERT INTO [django_content_type] ([app_label], [model]) VALUES (%s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = ('contenttypes', 'contenttype'); args=('contenttypes', 'contenttype')
(0.000) QUERY = 'SELECT [auth_permission].[content_type_id], [auth_permission].[codename] FROM [auth_permission] INNER JOIN [django_content_type] ON ([auth_permission].[content_type_id] = [django_content_type].[id]) WHERE [auth_permission].[content_type_id] IN (%s) ORDER BY [django_content_type].[app_label] ASC, [django_content_type].[model] ASC, [auth_permission].[codename] ASC' - PARAMS = (5,); args=(5,)
(0.016) QUERY = 'INSERT INTO [auth_permission] ([name], [content_type_id], [codename]) VALUES (%s, %s, %s), (%s, %s, %s), (%s, %s, %s)' - PARAMS = ('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype'); args=('Can add content type', 5, 'add_contenttype', 'Can change content type', 5, 'change_contenttype', 'Can delete content type', 5, 'delete_contenttype')
(0.000) QUERY = 'SELECT [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_content_type] WHERE [django_content_type].[app_label] = %s' - PARAMS = ('contenttypes',); args=('contenttypes',)
(0.000) QUERY = 'SELECT [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_content_type] WHERE ([django_content_type].[app_label] = %s AND [django_content_type].[model] = %s)' - PARAMS = ('sessions', 'session'); args=('sessions', 'session')
(0.000) QUERY = 'SELECT [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_content_type] WHERE ([django_content_type].[app_label] = %s AND [django_content_type].[model] = %s)' - PARAMS = ('sessions', 'session'); args=('sessions', 'session')
(0.000) QUERY = 'SET NOCOUNT ON INSERT INTO [django_content_type] ([app_label], [model]) VALUES (%s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = ('sessions', 'session'); args=('sessions', 'session')
(0.000) QUERY = 'SELECT [auth_permission].[content_type_id], [auth_permission].[codename] FROM [auth_permission] INNER JOIN [django_content_type] ON ([auth_permission].[content_type_id] = [django_content_type].[id]) WHERE [auth_permission].[content_type_id] IN (%s) ORDER BY [django_content_type].[app_label] ASC, [django_content_type].[model] ASC, [auth_permission].[codename] ASC' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'INSERT INTO [auth_permission] ([name], [content_type_id], [codename]) VALUES (%s, %s, %s), (%s, %s, %s), (%s, %s, %s)' - PARAMS = ('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session'); args=('Can add session', 6, 'add_session', 'Can change session', 6, 'change_session', 'Can delete session', 6, 'delete_session')
(0.000) QUERY = 'SELECT [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_content_type] WHERE [django_content_type].[app_label] = %s' - PARAMS = ('sessions',); args=('sessions',)
(0.000) QUERY = "SELECT CAST(SERVERPROPERTY('ProductVersion') AS varchar)" - PARAMS = (); args=None
(0.000) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.016) QUERY = 'SELECT [django_migrations].[app], [django_migrations].[name] FROM [django_migrations]' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[username] = %s' - PARAMS = ('admin',); args=('admin',)
(0.000) QUERY = "SELECT CAST(SERVERPROPERTY('ProductVersion') AS varchar)" - PARAMS = (); args=None
(0.000) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.000) QUERY = 'SELECT [django_migrations].[app], [django_migrations].[name] FROM [django_migrations]' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[username] = %s' - PARAMS = ('dino',); args=('dino',)
(0.000) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[username] = %s' - PARAMS = ('admin',); args=('admin',)
(0.031) QUERY = 'SET NOCOUNT ON INSERT INTO [auth_user] ([password], [last_login], [is_superuser], [username], [first_name], [last_name], [email], [is_staff], [is_active], [date_joined]) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = ('pbkdf2_sha256$36000$iKN9RFH8huHE$+/S1iW8Zkzs7rWicjc/2dPDblR4NVv2X79i/tdUwL3s=', None, 1, 'admin', '', '', '', 1, 1, datetime.datetime(2018, 5, 9, 17, 47, 50)); args=('pbkdf2_sha256$36000$iKN9RFH8huHE$+/S1iW8Zkzs7rWicjc/2dPDblR4NVv2X79i/tdUwL3s=', None, True, 'admin', '', '', '', True, True, datetime.datetime(2018, 5, 9, 17, 47, 50))
(0.012) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[username] = %s' - PARAMS = ('admin',); args=('admin',)
(0.031) QUERY = 'SELECT TOP 1 (1) AS [a] FROM [django_session] WHERE [django_session].[session_key] = %s' - PARAMS = ('ckrx78fzyqccqqe74xctsla7bs99m4u7',); args=('ckrx78fzyqccqqe74xctsla7bs99m4u7',)
(0.020) QUERY = 'INSERT INTO [django_session] ([session_key], [session_data], [expire_date]) VALUES (%s, %s, %s)' - PARAMS = ('ckrx78fzyqccqqe74xctsla7bs99m4u7', 'MmNhNTI5MzQwMmM2ZmM5MTNiNzllM2I4MDg2YzQyZDY3OWMxZGU5MDp7fQ==', datetime.datetime(2018, 5, 23, 17, 48, 17)); args=('ckrx78fzyqccqqe74xctsla7bs99m4u7', 'MmNhNTI5MzQwMmM2ZmM5MTNiNzllM2I4MDg2YzQyZDY3OWMxZGU5MDp7fQ==', datetime.datetime(2018, 5, 23, 17, 48, 17))
(0.093) QUERY = 'SET NOCOUNT OFF; UPDATE [auth_user] SET [last_login] = %s WHERE [auth_user].[id] = %s' - PARAMS = (datetime.datetime(2018, 5, 9, 17, 48, 17), 1); args=(datetime.datetime(2018, 5, 9, 17, 48, 17), 1)
(0.021) QUERY = 'SET NOCOUNT OFF; UPDATE [django_session] SET [session_data] = %s, [expire_date] = %s WHERE [django_session].[session_key] = %s' - PARAMS = ('YzM5YjhiYzEwZTJkZTdiODRhOGViZGQ4NmI5NGNmM2UyN2Q1OWU5Yjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJiMzk0N2JmOWNjZGJjMzc5Y2M4OGQyMmVkODk1MDA5Yjk0OTJiYTlmIn0=', datetime.datetime(2018, 5, 23, 17, 48, 17), 'ckrx78fzyqccqqe74xctsla7bs99m4u7'); args=('YzM5YjhiYzEwZTJkZTdiODRhOGViZGQ4NmI5NGNmM2UyN2Q1OWU5Yjp7Il9hdXRoX3VzZXJfaWQiOiIxIiwiX2F1dGhfdXNlcl9iYWNrZW5kIjoiZGphbmdvLmNvbnRyaWIuYXV0aC5iYWNrZW5kcy5Nb2RlbEJhY2tlbmQiLCJfYXV0aF91c2VyX2hhc2giOiJiMzk0N2JmOWNjZGJjMzc5Y2M4OGQyMmVkODk1MDA5Yjk0OTJiYTlmIn0=', datetime.datetime(2018, 5, 23, 17, 48, 17), 'ckrx78fzyqccqqe74xctsla7bs99m4u7')
(0.141) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('ckrx78fzyqccqqe74xctsla7bs99m4u7', datetime.datetime(2018, 5, 9, 17, 48, 17, 571816)); args=('ckrx78fzyqccqqe74xctsla7bs99m4u7', datetime.datetime(2018, 5, 9, 17, 48, 17, 571816))
(0.002) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.051) QUERY = 'SELECT TOP 10 [django_admin_log].[id], [django_admin_log].[action_time], [django_admin_log].[user_id], [django_admin_log].[content_type_id], [django_admin_log].[object_id], [django_admin_log].[object_repr], [django_admin_log].[action_flag], [django_admin_log].[change_message], [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined], [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_admin_log] INNER JOIN [auth_user] ON ([django_admin_log].[user_id] = [auth_user].[id]) LEFT OUTER JOIN [django_content_type] ON ([django_admin_log].[content_type_id] = [django_content_type].[id]) WHERE [django_admin_log].[user_id] = %s ORDER BY [django_admin_log].[action_time] DESC' - PARAMS = (1,); args=(1,)
(0.001) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('ckrx78fzyqccqqe74xctsla7bs99m4u7', datetime.datetime(2018, 5, 9, 17, 48, 22, 102297)); args=('ckrx78fzyqccqqe74xctsla7bs99m4u7', datetime.datetime(2018, 5, 9, 17, 48, 22, 102297))
(0.001) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.066) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Building]' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Building]' - PARAMS = (); args=()
(0.025) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building] ORDER BY [Building].[Id] DESC' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('ckrx78fzyqccqqe74xctsla7bs99m4u7', datetime.datetime(2018, 5, 9, 17, 48, 22, 573494)); args=('ckrx78fzyqccqqe74xctsla7bs99m4u7', datetime.datetime(2018, 5, 9, 17, 48, 22, 573494))
(0.006) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.000) QUERY = "SELECT CAST(SERVERPROPERTY('ProductVersion') AS varchar)" - PARAMS = (); args=None
(0.000) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.568) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Auditorium',); args=('Auditorium',)
(0.219) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Auditorium',); args=['Auditorium']
(0.203) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Auditorium',); args=['Auditorium']
(0.044) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Auditorium',); args=['Auditorium']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Auditorium',); args=['Auditorium']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Auditorium',); args=['Auditorium']
(0.016) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Auditorium',); args=['Auditorium']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Auditorium]', 'Id'); args=('[Auditorium]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Auditorium]', 'Number'); args=('[Auditorium]', 'Number')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Auditorium]', 'Name'); args=('[Auditorium]', 'Name')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Auditorium]', 'DepartmentId'); args=('[Auditorium]', 'DepartmentId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Auditorium]', 'SeatingCapacity'); args=('[Auditorium]', 'SeatingCapacity')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Auditorium]', 'AuditoriumTypeId'); args=('[Auditorium]', 'AuditoriumTypeId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Auditorium]', 'BuildingId'); args=('[Auditorium]', 'BuildingId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Auditorium]', 'Location'); args=('[Auditorium]', 'Location')
(0.402) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('AuditoriumType',); args=('AuditoriumType',)
(0.172) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('AuditoriumType',); args=['AuditoriumType']
(0.141) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('AuditoriumType',); args=['AuditoriumType']
(0.047) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('AuditoriumType',); args=['AuditoriumType']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('AuditoriumType',); args=['AuditoriumType']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('AuditoriumType',); args=['AuditoriumType']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('AuditoriumType',); args=['AuditoriumType']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[AuditoriumType]', 'Id'); args=('[AuditoriumType]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[AuditoriumType]', 'Name'); args=('[AuditoriumType]', 'Name')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[AuditoriumType]', 'FullName'); args=('[AuditoriumType]', 'FullName')
(0.484) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Building',); args=('Building',)
(0.180) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Building',); args=['Building']
(0.141) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Building',); args=['Building']
(0.132) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Building',); args=['Building']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Building',); args=['Building']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Building',); args=['Building']
(0.016) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Building',); args=['Building']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Building]', 'Id'); args=('[Building]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Building]', 'FullName'); args=('[Building]', 'FullName')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Building]', 'Number'); args=('[Building]', 'Number')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Building]', 'Location'); args=('[Building]', 'Location')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Building]', 'Address'); args=('[Building]', 'Address')
(0.418) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Course',); args=('Course',)
(0.222) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Course',); args=['Course']
(0.152) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Course',); args=['Course']
(0.047) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Course',); args=['Course']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Course',); args=['Course']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Course',); args=['Course']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Course',); args=['Course']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Course]', 'Id'); args=('[Course]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Course]', 'Number'); args=('[Course]', 'Number')
(0.519) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('CourseGroup',); args=('CourseGroup',)
(0.178) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('CourseGroup',); args=['CourseGroup']
(0.118) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('CourseGroup',); args=['CourseGroup']
(0.047) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('CourseGroup',); args=['CourseGroup']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('CourseGroup',); args=['CourseGroup']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('CourseGroup',); args=['CourseGroup']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('CourseGroup',); args=['CourseGroup']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[CourseGroup]', 'Id'); args=('[CourseGroup]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[CourseGroup]', 'CourseId'); args=('[CourseGroup]', 'CourseId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[CourseGroup]', 'GroupId'); args=('[CourseGroup]', 'GroupId')
(0.453) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('DayOfWeek',); args=('DayOfWeek',)
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('DayOfWeek',); args=['DayOfWeek']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('DayOfWeek',); args=['DayOfWeek']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('DayOfWeek',); args=['DayOfWeek']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('DayOfWeek',); args=['DayOfWeek']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('DayOfWeek',); args=['DayOfWeek']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('DayOfWeek',); args=['DayOfWeek']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[DayOfWeek]', 'Id'); args=('[DayOfWeek]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[DayOfWeek]', 'Number'); args=('[DayOfWeek]', 'Number')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[DayOfWeek]', 'Name'); args=('[DayOfWeek]', 'Name')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[DayOfWeek]', 'FullName'); args=('[DayOfWeek]', 'FullName')
(0.047) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Department',); args=('Department',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Department',); args=['Department']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Department',); args=['Department']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Department',); args=['Department']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Department',); args=['Department']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Department',); args=['Department']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Department',); args=['Department']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Department]', 'Id'); args=('[Department]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Department]', 'Name'); args=('[Department]', 'Name')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Department]', 'FullName'); args=('[Department]', 'FullName')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Department]', 'FacultyId'); args=('[Department]', 'FacultyId')
(0.407) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Faculty',); args=('Faculty',)
(0.234) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Faculty',); args=['Faculty']
(0.125) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Faculty',); args=['Faculty']
(0.047) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Faculty',); args=['Faculty']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Faculty',); args=['Faculty']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Faculty',); args=['Faculty']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Faculty',); args=['Faculty']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Faculty]', 'Id'); args=('[Faculty]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Faculty]', 'Name'); args=('[Faculty]', 'Name')
(0.016) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Faculty]', 'FullName'); args=('[Faculty]', 'FullName')
(0.485) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Group',); args=('Group',)
(0.172) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Group',); args=['Group']
(0.125) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Group',); args=['Group']
(0.047) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Group',); args=['Group']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Group',); args=['Group']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Group',); args=['Group']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Group',); args=['Group']
(0.078) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Group]', 'Id'); args=('[Group]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Group]', 'Name'); args=('[Group]', 'Name')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Group]', 'NumberOfStudents'); args=('[Group]', 'NumberOfStudents')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Group]', 'DepartmentId'); args=('[Group]', 'DepartmentId')
(0.422) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Hour',); args=('Hour',)
(0.359) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Hour',); args=['Hour']
(0.141) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Hour',); args=['Hour']
(0.047) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Hour',); args=['Hour']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Hour',); args=['Hour']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Hour',); args=['Hour']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Hour',); args=['Hour']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Hour]', 'Id'); args=('[Hour]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Hour]', 'Begin'); args=('[Hour]', 'Begin')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Hour]', 'End'); args=('[Hour]', 'End')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Hour]', 'Number'); args=('[Hour]', 'Number')
(0.063) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Raschasovka',); args=('Raschasovka',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Raschasovka',); args=['Raschasovka']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Raschasovka',); args=['Raschasovka']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Raschasovka',); args=['Raschasovka']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Raschasovka',); args=['Raschasovka']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Raschasovka',); args=['Raschasovka']
(0.016) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Raschasovka',); args=['Raschasovka']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Raschasovka]', 'Id'); args=('[Raschasovka]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Raschasovka]', 'Potok'); args=('[Raschasovka]', 'Potok')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Raschasovka]', 'CourseId'); args=('[Raschasovka]', 'CourseId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Raschasovka]', 'TeacherId'); args=('[Raschasovka]', 'TeacherId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Raschasovka]', 'TotalHoursForSemestr'); args=('[Raschasovka]', 'TotalHoursForSemestr')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Raschasovka]', 'AuditoriumId'); args=('[Raschasovka]', 'AuditoriumId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Raschasovka]', 'GroupId'); args=('[Raschasovka]', 'GroupId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Raschasovka]', 'DepartmentId'); args=('[Raschasovka]', 'DepartmentId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Raschasovka]', 'SemesterId'); args=('[Raschasovka]', 'SemesterId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Raschasovka]', 'SubjectId'); args=('[Raschasovka]', 'SubjectId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Raschasovka]', 'SubjectTypeId'); args=('[Raschasovka]', 'SubjectTypeId')
(0.459) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('RaschasovkaWeeks',); args=('RaschasovkaWeeks',)
(0.005) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('RaschasovkaWeeks',); args=['RaschasovkaWeeks']
(0.004) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('RaschasovkaWeeks',); args=['RaschasovkaWeeks']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('RaschasovkaWeeks',); args=['RaschasovkaWeeks']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('RaschasovkaWeeks',); args=['RaschasovkaWeeks']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('RaschasovkaWeeks',); args=['RaschasovkaWeeks']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('RaschasovkaWeeks',); args=['RaschasovkaWeeks']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaWeeks]', 'Id'); args=('[RaschasovkaWeeks]', 'Id')
(0.063) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaWeeks]', 'RaschasovkaId'); args=('[RaschasovkaWeeks]', 'RaschasovkaId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaWeeks]', 'WeekId'); args=('[RaschasovkaWeeks]', 'WeekId')
(0.063) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('RaschasovkaYears',); args=('RaschasovkaYears',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('RaschasovkaYears',); args=['RaschasovkaYears']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('RaschasovkaYears',); args=['RaschasovkaYears']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('RaschasovkaYears',); args=['RaschasovkaYears']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('RaschasovkaYears',); args=['RaschasovkaYears']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('RaschasovkaYears',); args=['RaschasovkaYears']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('RaschasovkaYears',); args=['RaschasovkaYears']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'Id'); args=('[RaschasovkaYears]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'Potok'); args=('[RaschasovkaYears]', 'Potok')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'CourseId'); args=('[RaschasovkaYears]', 'CourseId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'TeacherId'); args=('[RaschasovkaYears]', 'TeacherId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'TotalHoursForSemestr'); args=('[RaschasovkaYears]', 'TotalHoursForSemestr')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'AuditoriumId'); args=('[RaschasovkaYears]', 'AuditoriumId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'GroupId'); args=('[RaschasovkaYears]', 'GroupId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'DepartmentId'); args=('[RaschasovkaYears]', 'DepartmentId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'SemesterId'); args=('[RaschasovkaYears]', 'SemesterId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'SubjectId'); args=('[RaschasovkaYears]', 'SubjectId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'SubjectTypeId'); args=('[RaschasovkaYears]', 'SubjectTypeId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'YearId'); args=('[RaschasovkaYears]', 'YearId')
(0.063) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Schedule',); args=('Schedule',)
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Schedule',); args=['Schedule']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Schedule',); args=['Schedule']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Schedule',); args=['Schedule']
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Schedule',); args=['Schedule']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Schedule',); args=['Schedule']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Schedule',); args=['Schedule']
(0.016) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'Id'); args=('[Schedule]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'HourId'); args=('[Schedule]', 'HourId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'DayOfWeekId'); args=('[Schedule]', 'DayOfWeekId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'GroupId'); args=('[Schedule]', 'GroupId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'TeacherId'); args=('[Schedule]', 'TeacherId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'AuditoriumId'); args=('[Schedule]', 'AuditoriumId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'WeekId'); args=('[Schedule]', 'WeekId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'LastChange'); args=('[Schedule]', 'LastChange')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'IsFinal'); args=('[Schedule]', 'IsFinal')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'SubjectId'); args=('[Schedule]', 'SubjectId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'SubjectTypeId'); args=('[Schedule]', 'SubjectTypeId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'SemesterId'); args=('[Schedule]', 'SemesterId')
(0.881) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('ScheduleYears',); args=('ScheduleYears',)
(0.210) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('ScheduleYears',); args=['ScheduleYears']
(0.203) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('ScheduleYears',); args=['ScheduleYears']
(0.047) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('ScheduleYears',); args=['ScheduleYears']
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('ScheduleYears',); args=['ScheduleYears']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('ScheduleYears',); args=['ScheduleYears']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('ScheduleYears',); args=['ScheduleYears']
(0.016) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'Id'); args=('[ScheduleYears]', 'Id')
(0.016) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'HourId'); args=('[ScheduleYears]', 'HourId')
(0.016) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'DayOfWeekId'); args=('[ScheduleYears]', 'DayOfWeekId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'GroupId'); args=('[ScheduleYears]', 'GroupId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'TeacherId'); args=('[ScheduleYears]', 'TeacherId')
(0.016) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'AuditoriumId'); args=('[ScheduleYears]', 'AuditoriumId')
(0.078) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'WeekId'); args=('[ScheduleYears]', 'WeekId')
(0.047) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'LastChange'); args=('[ScheduleYears]', 'LastChange')
(0.063) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'IsFinal'); args=('[ScheduleYears]', 'IsFinal')
(0.016) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'SubjectId'); args=('[ScheduleYears]', 'SubjectId')
(0.063) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'SubjectTypeId'); args=('[ScheduleYears]', 'SubjectTypeId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'SemesterId'); args=('[ScheduleYears]', 'SemesterId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'YearId'); args=('[ScheduleYears]', 'YearId')
(0.016) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Semesters',); args=('Semesters',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Semesters',); args=['Semesters']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Semesters',); args=['Semesters']
(0.016) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Semesters',); args=['Semesters']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Semesters',); args=['Semesters']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Semesters',); args=['Semesters']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Semesters',); args=['Semesters']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Semesters]', 'Id'); args=('[Semesters]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Semesters]', 'Name'); args=('[Semesters]', 'Name')
(0.016) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Subject',); args=('Subject',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Subject',); args=['Subject']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Subject',); args=['Subject']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Subject',); args=['Subject']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Subject',); args=['Subject']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Subject',); args=['Subject']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Subject',); args=['Subject']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Subject]', 'Id'); args=('[Subject]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Subject]', 'Name'); args=('[Subject]', 'Name')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Subject]', 'FullName'); args=('[Subject]', 'FullName')
(0.436) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('SubjectDepartment',); args=('SubjectDepartment',)
(0.174) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('SubjectDepartment',); args=['SubjectDepartment']
(0.125) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('SubjectDepartment',); args=['SubjectDepartment']
(0.063) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('SubjectDepartment',); args=['SubjectDepartment']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('SubjectDepartment',); args=['SubjectDepartment']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('SubjectDepartment',); args=['SubjectDepartment']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('SubjectDepartment',); args=['SubjectDepartment']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[SubjectDepartment]', 'Id'); args=('[SubjectDepartment]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[SubjectDepartment]', 'SubjectId'); args=('[SubjectDepartment]', 'SubjectId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[SubjectDepartment]', 'DepartmentId'); args=('[SubjectDepartment]', 'DepartmentId')
(0.031) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('SubjectType',); args=('SubjectType',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('SubjectType',); args=['SubjectType']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('SubjectType',); args=['SubjectType']
(0.016) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('SubjectType',); args=['SubjectType']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('SubjectType',); args=['SubjectType']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('SubjectType',); args=['SubjectType']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('SubjectType',); args=['SubjectType']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[SubjectType]', 'Id'); args=('[SubjectType]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[SubjectType]', 'Name'); args=('[SubjectType]', 'Name')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[SubjectType]', 'FullName'); args=('[SubjectType]', 'FullName')
(0.016) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Teacher',); args=('Teacher',)
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Teacher',); args=['Teacher']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Teacher',); args=['Teacher']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Teacher',); args=['Teacher']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Teacher',); args=['Teacher']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Teacher',); args=['Teacher']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Teacher',); args=['Teacher']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Teacher]', 'Id'); args=('[Teacher]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Teacher]', 'FirstName'); args=('[Teacher]', 'FirstName')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Teacher]', 'LastName'); args=('[Teacher]', 'LastName')
(0.063) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('TeacherDepartment',); args=('TeacherDepartment',)
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('TeacherDepartment',); args=['TeacherDepartment']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('TeacherDepartment',); args=['TeacherDepartment']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('TeacherDepartment',); args=['TeacherDepartment']
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('TeacherDepartment',); args=['TeacherDepartment']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('TeacherDepartment',); args=['TeacherDepartment']
(0.016) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('TeacherDepartment',); args=['TeacherDepartment']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[TeacherDepartment]', 'Id'); args=('[TeacherDepartment]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[TeacherDepartment]', 'TeacherId'); args=('[TeacherDepartment]', 'TeacherId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[TeacherDepartment]', 'DepartmentId'); args=('[TeacherDepartment]', 'DepartmentId')
(0.515) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('TeacherPersonalTime',); args=('TeacherPersonalTime',)
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('TeacherPersonalTime',); args=['TeacherPersonalTime']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('TeacherPersonalTime',); args=['TeacherPersonalTime']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('TeacherPersonalTime',); args=['TeacherPersonalTime']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('TeacherPersonalTime',); args=['TeacherPersonalTime']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('TeacherPersonalTime',); args=['TeacherPersonalTime']
(0.016) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('TeacherPersonalTime',); args=['TeacherPersonalTime']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[TeacherPersonalTime]', 'Id'); args=('[TeacherPersonalTime]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[TeacherPersonalTime]', 'TeacherId'); args=('[TeacherPersonalTime]', 'TeacherId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[TeacherPersonalTime]', 'HourId'); args=('[TeacherPersonalTime]', 'HourId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[TeacherPersonalTime]', 'DayOfWeekId'); args=('[TeacherPersonalTime]', 'DayOfWeekId')
(0.016) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Week',); args=('Week',)
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Week',); args=['Week']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Week',); args=['Week']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Week',); args=['Week']
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Week',); args=['Week']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Week',); args=['Week']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Week',); args=['Week']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Week]', 'Id'); args=('[Week]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Week]', 'Number'); args=('[Week]', 'Number')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Week]', 'Znamenatel'); args=('[Week]', 'Znamenatel')
(0.031) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Years',); args=('Years',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Years',); args=['Years']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Years',); args=['Years']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Years',); args=['Years']
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Years',); args=['Years']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Years',); args=['Years']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Years',); args=['Years']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Years]', 'Id'); args=('[Years]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Years]', 'Name'); args=('[Years]', 'Name')
(0.016) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('auth_group',); args=('auth_group',)
(0.015) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_group',); args=['auth_group']
(0.003) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_group',); args=['auth_group']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_group',); args=['auth_group']
(0.006) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_group',); args=['auth_group']
(0.003) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_group',); args=['auth_group']
(0.001) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_group',); args=['auth_group']
(0.001) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_group]', 'id'); args=('[auth_group]', 'id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_group]', 'name'); args=('[auth_group]', 'name')
(0.408) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('auth_group_permissions',); args=('auth_group_permissions',)
(0.219) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_group_permissions',); args=['auth_group_permissions']
(0.156) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_group_permissions',); args=['auth_group_permissions']
(0.047) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_group_permissions',); args=['auth_group_permissions']
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_group_permissions',); args=['auth_group_permissions']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_group_permissions',); args=['auth_group_permissions']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_group_permissions',); args=['auth_group_permissions']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_group_permissions]', 'id'); args=('[auth_group_permissions]', 'id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_group_permissions]', 'group_id'); args=('[auth_group_permissions]', 'group_id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_group_permissions]', 'permission_id'); args=('[auth_group_permissions]', 'permission_id')
(0.444) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('auth_permission',); args=('auth_permission',)
(0.190) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_permission',); args=['auth_permission']
(0.125) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_permission',); args=['auth_permission']
(0.040) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_permission',); args=['auth_permission']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_permission',); args=['auth_permission']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_permission',); args=['auth_permission']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_permission',); args=['auth_permission']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_permission]', 'id'); args=('[auth_permission]', 'id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_permission]', 'name'); args=('[auth_permission]', 'name')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_permission]', 'content_type_id'); args=('[auth_permission]', 'content_type_id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_permission]', 'codename'); args=('[auth_permission]', 'codename')
(0.031) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('auth_user',); args=('auth_user',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_user',); args=['auth_user']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_user',); args=['auth_user']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_user',); args=['auth_user']
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_user',); args=['auth_user']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_user',); args=['auth_user']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_user',); args=['auth_user']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user]', 'id'); args=('[auth_user]', 'id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user]', 'password'); args=('[auth_user]', 'password')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user]', 'last_login'); args=('[auth_user]', 'last_login')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user]', 'is_superuser'); args=('[auth_user]', 'is_superuser')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user]', 'username'); args=('[auth_user]', 'username')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user]', 'first_name'); args=('[auth_user]', 'first_name')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user]', 'last_name'); args=('[auth_user]', 'last_name')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user]', 'email'); args=('[auth_user]', 'email')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user]', 'is_staff'); args=('[auth_user]', 'is_staff')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user]', 'is_active'); args=('[auth_user]', 'is_active')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user]', 'date_joined'); args=('[auth_user]', 'date_joined')
(0.047) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('auth_user_groups',); args=('auth_user_groups',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_user_groups',); args=['auth_user_groups']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_user_groups',); args=['auth_user_groups']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_user_groups',); args=['auth_user_groups']
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_user_groups',); args=['auth_user_groups']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_user_groups',); args=['auth_user_groups']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_user_groups',); args=['auth_user_groups']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user_groups]', 'id'); args=('[auth_user_groups]', 'id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user_groups]', 'user_id'); args=('[auth_user_groups]', 'user_id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user_groups]', 'group_id'); args=('[auth_user_groups]', 'group_id')
(0.500) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('auth_user_user_permissions',); args=('auth_user_user_permissions',)
(0.172) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_user_user_permissions',); args=['auth_user_user_permissions']
(0.140) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_user_user_permissions',); args=['auth_user_user_permissions']
(0.031) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_user_user_permissions',); args=['auth_user_user_permissions']
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_user_user_permissions',); args=['auth_user_user_permissions']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_user_user_permissions',); args=['auth_user_user_permissions']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_user_user_permissions',); args=['auth_user_user_permissions']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user_user_permissions]', 'id'); args=('[auth_user_user_permissions]', 'id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user_user_permissions]', 'user_id'); args=('[auth_user_user_permissions]', 'user_id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user_user_permissions]', 'permission_id'); args=('[auth_user_user_permissions]', 'permission_id')
(0.063) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('django_admin_log',); args=('django_admin_log',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('django_admin_log',); args=['django_admin_log']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('django_admin_log',); args=['django_admin_log']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('django_admin_log',); args=['django_admin_log']
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('django_admin_log',); args=['django_admin_log']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('django_admin_log',); args=['django_admin_log']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('django_admin_log',); args=['django_admin_log']
(0.016) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_admin_log]', 'id'); args=('[django_admin_log]', 'id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_admin_log]', 'action_time'); args=('[django_admin_log]', 'action_time')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_admin_log]', 'object_id'); args=('[django_admin_log]', 'object_id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_admin_log]', 'object_repr'); args=('[django_admin_log]', 'object_repr')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_admin_log]', 'action_flag'); args=('[django_admin_log]', 'action_flag')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_admin_log]', 'change_message'); args=('[django_admin_log]', 'change_message')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_admin_log]', 'content_type_id'); args=('[django_admin_log]', 'content_type_id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_admin_log]', 'user_id'); args=('[django_admin_log]', 'user_id')
(0.016) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('django_content_type',); args=('django_content_type',)
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('django_content_type',); args=['django_content_type']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('django_content_type',); args=['django_content_type']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('django_content_type',); args=['django_content_type']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('django_content_type',); args=['django_content_type']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('django_content_type',); args=['django_content_type']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('django_content_type',); args=['django_content_type']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_content_type]', 'id'); args=('[django_content_type]', 'id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_content_type]', 'app_label'); args=('[django_content_type]', 'app_label')
(0.063) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_content_type]', 'model'); args=('[django_content_type]', 'model')
(0.031) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('django_migrations',); args=('django_migrations',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('django_migrations',); args=['django_migrations']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('django_migrations',); args=['django_migrations']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('django_migrations',); args=['django_migrations']
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('django_migrations',); args=['django_migrations']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('django_migrations',); args=['django_migrations']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('django_migrations',); args=['django_migrations']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_migrations]', 'id'); args=('[django_migrations]', 'id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_migrations]', 'app'); args=('[django_migrations]', 'app')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_migrations]', 'name'); args=('[django_migrations]', 'name')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_migrations]', 'applied'); args=('[django_migrations]', 'applied')
(0.031) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('django_session',); args=('django_session',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('django_session',); args=['django_session']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('django_session',); args=['django_session']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('django_session',); args=['django_session']
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('django_session',); args=['django_session']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('django_session',); args=['django_session']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('django_session',); args=['django_session']
(0.016) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_session]', 'session_key'); args=('[django_session]', 'session_key')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_session]', 'session_data'); args=('[django_session]', 'session_data')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_session]', 'expire_date'); args=('[django_session]', 'expire_date')
(0.001) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('ckrx78fzyqccqqe74xctsla7bs99m4u7', datetime.datetime(2018, 5, 9, 17, 49, 58, 871008)); args=('ckrx78fzyqccqqe74xctsla7bs99m4u7', datetime.datetime(2018, 5, 9, 17, 49, 58, 871008))
(0.001) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.000) QUERY = "SELECT CAST(SERVERPROPERTY('ProductVersion') AS varchar)" - PARAMS = (); args=None
(0.000) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.063) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Auditorium',); args=('Auditorium',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Auditorium',); args=['Auditorium']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Auditorium',); args=['Auditorium']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Auditorium',); args=['Auditorium']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Auditorium',); args=['Auditorium']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Auditorium',); args=['Auditorium']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Auditorium',); args=['Auditorium']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Auditorium]', 'Id'); args=('[Auditorium]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Auditorium]', 'Number'); args=('[Auditorium]', 'Number')
(0.016) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Auditorium]', 'Name'); args=('[Auditorium]', 'Name')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Auditorium]', 'DepartmentId'); args=('[Auditorium]', 'DepartmentId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Auditorium]', 'SeatingCapacity'); args=('[Auditorium]', 'SeatingCapacity')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Auditorium]', 'AuditoriumTypeId'); args=('[Auditorium]', 'AuditoriumTypeId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Auditorium]', 'BuildingId'); args=('[Auditorium]', 'BuildingId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Auditorium]', 'Location'); args=('[Auditorium]', 'Location')
(0.016) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('AuditoriumType',); args=('AuditoriumType',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('AuditoriumType',); args=['AuditoriumType']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('AuditoriumType',); args=['AuditoriumType']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('AuditoriumType',); args=['AuditoriumType']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('AuditoriumType',); args=['AuditoriumType']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('AuditoriumType',); args=['AuditoriumType']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('AuditoriumType',); args=['AuditoriumType']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[AuditoriumType]', 'Id'); args=('[AuditoriumType]', 'Id')
(0.016) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[AuditoriumType]', 'Name'); args=('[AuditoriumType]', 'Name')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[AuditoriumType]', 'FullName'); args=('[AuditoriumType]', 'FullName')
(0.016) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Building',); args=('Building',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Building',); args=['Building']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Building',); args=['Building']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Building',); args=['Building']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Building',); args=['Building']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Building',); args=['Building']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Building',); args=['Building']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Building]', 'Id'); args=('[Building]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Building]', 'FullName'); args=('[Building]', 'FullName')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Building]', 'Number'); args=('[Building]', 'Number')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Building]', 'Location'); args=('[Building]', 'Location')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Building]', 'Address'); args=('[Building]', 'Address')
(0.031) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Course',); args=('Course',)
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Course',); args=['Course']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Course',); args=['Course']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Course',); args=['Course']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Course',); args=['Course']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Course',); args=['Course']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Course',); args=['Course']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Course]', 'Id'); args=('[Course]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Course]', 'Number'); args=('[Course]', 'Number')
(0.047) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('CourseGroup',); args=('CourseGroup',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('CourseGroup',); args=['CourseGroup']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('CourseGroup',); args=['CourseGroup']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('CourseGroup',); args=['CourseGroup']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('CourseGroup',); args=['CourseGroup']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('CourseGroup',); args=['CourseGroup']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('CourseGroup',); args=['CourseGroup']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[CourseGroup]', 'Id'); args=('[CourseGroup]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[CourseGroup]', 'CourseId'); args=('[CourseGroup]', 'CourseId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[CourseGroup]', 'GroupId'); args=('[CourseGroup]', 'GroupId')
(0.016) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('DayOfWeek',); args=('DayOfWeek',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('DayOfWeek',); args=['DayOfWeek']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('DayOfWeek',); args=['DayOfWeek']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('DayOfWeek',); args=['DayOfWeek']
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('DayOfWeek',); args=['DayOfWeek']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('DayOfWeek',); args=['DayOfWeek']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('DayOfWeek',); args=['DayOfWeek']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[DayOfWeek]', 'Id'); args=('[DayOfWeek]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[DayOfWeek]', 'Number'); args=('[DayOfWeek]', 'Number')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[DayOfWeek]', 'Name'); args=('[DayOfWeek]', 'Name')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[DayOfWeek]', 'FullName'); args=('[DayOfWeek]', 'FullName')
(0.063) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Department',); args=('Department',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Department',); args=['Department']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Department',); args=['Department']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Department',); args=['Department']
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Department',); args=['Department']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Department',); args=['Department']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Department',); args=['Department']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Department]', 'Id'); args=('[Department]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Department]', 'Name'); args=('[Department]', 'Name')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Department]', 'FullName'); args=('[Department]', 'FullName')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Department]', 'FacultyId'); args=('[Department]', 'FacultyId')
(0.047) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Faculty',); args=('Faculty',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Faculty',); args=['Faculty']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Faculty',); args=['Faculty']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Faculty',); args=['Faculty']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Faculty',); args=['Faculty']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Faculty',); args=['Faculty']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Faculty',); args=['Faculty']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Faculty]', 'Id'); args=('[Faculty]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Faculty]', 'Name'); args=('[Faculty]', 'Name')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Faculty]', 'FullName'); args=('[Faculty]', 'FullName')
(0.063) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Group',); args=('Group',)
(0.011) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Group',); args=['Group']
(0.005) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Group',); args=['Group']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Group',); args=['Group']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Group',); args=['Group']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Group',); args=['Group']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Group',); args=['Group']
(0.094) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Group]', 'Id'); args=('[Group]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Group]', 'Name'); args=('[Group]', 'Name')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Group]', 'NumberOfStudents'); args=('[Group]', 'NumberOfStudents')
(0.016) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Group]', 'DepartmentId'); args=('[Group]', 'DepartmentId')
(0.016) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Hour',); args=('Hour',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Hour',); args=['Hour']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Hour',); args=['Hour']
(0.016) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Hour',); args=['Hour']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Hour',); args=['Hour']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Hour',); args=['Hour']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Hour',); args=['Hour']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Hour]', 'Id'); args=('[Hour]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Hour]', 'Begin'); args=('[Hour]', 'Begin')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Hour]', 'End'); args=('[Hour]', 'End')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Hour]', 'Number'); args=('[Hour]', 'Number')
(0.078) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Raschasovka',); args=('Raschasovka',)
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Raschasovka',); args=['Raschasovka']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Raschasovka',); args=['Raschasovka']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Raschasovka',); args=['Raschasovka']
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Raschasovka',); args=['Raschasovka']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Raschasovka',); args=['Raschasovka']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Raschasovka',); args=['Raschasovka']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Raschasovka]', 'Id'); args=('[Raschasovka]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Raschasovka]', 'Potok'); args=('[Raschasovka]', 'Potok')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Raschasovka]', 'CourseId'); args=('[Raschasovka]', 'CourseId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Raschasovka]', 'TeacherId'); args=('[Raschasovka]', 'TeacherId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Raschasovka]', 'TotalHoursForSemestr'); args=('[Raschasovka]', 'TotalHoursForSemestr')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Raschasovka]', 'AuditoriumId'); args=('[Raschasovka]', 'AuditoriumId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Raschasovka]', 'GroupId'); args=('[Raschasovka]', 'GroupId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Raschasovka]', 'DepartmentId'); args=('[Raschasovka]', 'DepartmentId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Raschasovka]', 'SemesterId'); args=('[Raschasovka]', 'SemesterId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Raschasovka]', 'SubjectId'); args=('[Raschasovka]', 'SubjectId')
(0.016) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Raschasovka]', 'SubjectTypeId'); args=('[Raschasovka]', 'SubjectTypeId')
(0.063) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('RaschasovkaWeeks',); args=('RaschasovkaWeeks',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('RaschasovkaWeeks',); args=['RaschasovkaWeeks']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('RaschasovkaWeeks',); args=['RaschasovkaWeeks']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('RaschasovkaWeeks',); args=['RaschasovkaWeeks']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('RaschasovkaWeeks',); args=['RaschasovkaWeeks']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('RaschasovkaWeeks',); args=['RaschasovkaWeeks']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('RaschasovkaWeeks',); args=['RaschasovkaWeeks']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaWeeks]', 'Id'); args=('[RaschasovkaWeeks]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaWeeks]', 'RaschasovkaId'); args=('[RaschasovkaWeeks]', 'RaschasovkaId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaWeeks]', 'WeekId'); args=('[RaschasovkaWeeks]', 'WeekId')
(0.063) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('RaschasovkaYears',); args=('RaschasovkaYears',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('RaschasovkaYears',); args=['RaschasovkaYears']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('RaschasovkaYears',); args=['RaschasovkaYears']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('RaschasovkaYears',); args=['RaschasovkaYears']
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('RaschasovkaYears',); args=['RaschasovkaYears']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('RaschasovkaYears',); args=['RaschasovkaYears']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('RaschasovkaYears',); args=['RaschasovkaYears']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'Id'); args=('[RaschasovkaYears]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'Potok'); args=('[RaschasovkaYears]', 'Potok')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'CourseId'); args=('[RaschasovkaYears]', 'CourseId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'TeacherId'); args=('[RaschasovkaYears]', 'TeacherId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'TotalHoursForSemestr'); args=('[RaschasovkaYears]', 'TotalHoursForSemestr')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'AuditoriumId'); args=('[RaschasovkaYears]', 'AuditoriumId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'GroupId'); args=('[RaschasovkaYears]', 'GroupId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'DepartmentId'); args=('[RaschasovkaYears]', 'DepartmentId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'SemesterId'); args=('[RaschasovkaYears]', 'SemesterId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'SubjectId'); args=('[RaschasovkaYears]', 'SubjectId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'SubjectTypeId'); args=('[RaschasovkaYears]', 'SubjectTypeId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[RaschasovkaYears]', 'YearId'); args=('[RaschasovkaYears]', 'YearId')
(0.063) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Schedule',); args=('Schedule',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Schedule',); args=['Schedule']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Schedule',); args=['Schedule']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Schedule',); args=['Schedule']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Schedule',); args=['Schedule']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Schedule',); args=['Schedule']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Schedule',); args=['Schedule']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'Id'); args=('[Schedule]', 'Id')
(0.016) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'HourId'); args=('[Schedule]', 'HourId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'DayOfWeekId'); args=('[Schedule]', 'DayOfWeekId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'GroupId'); args=('[Schedule]', 'GroupId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'TeacherId'); args=('[Schedule]', 'TeacherId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'AuditoriumId'); args=('[Schedule]', 'AuditoriumId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'WeekId'); args=('[Schedule]', 'WeekId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'LastChange'); args=('[Schedule]', 'LastChange')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'IsFinal'); args=('[Schedule]', 'IsFinal')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'SubjectId'); args=('[Schedule]', 'SubjectId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'SubjectTypeId'); args=('[Schedule]', 'SubjectTypeId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Schedule]', 'SemesterId'); args=('[Schedule]', 'SemesterId')
(0.063) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('ScheduleYears',); args=('ScheduleYears',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('ScheduleYears',); args=['ScheduleYears']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('ScheduleYears',); args=['ScheduleYears']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('ScheduleYears',); args=['ScheduleYears']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('ScheduleYears',); args=['ScheduleYears']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('ScheduleYears',); args=['ScheduleYears']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('ScheduleYears',); args=['ScheduleYears']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'Id'); args=('[ScheduleYears]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'HourId'); args=('[ScheduleYears]', 'HourId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'DayOfWeekId'); args=('[ScheduleYears]', 'DayOfWeekId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'GroupId'); args=('[ScheduleYears]', 'GroupId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'TeacherId'); args=('[ScheduleYears]', 'TeacherId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'AuditoriumId'); args=('[ScheduleYears]', 'AuditoriumId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'WeekId'); args=('[ScheduleYears]', 'WeekId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'LastChange'); args=('[ScheduleYears]', 'LastChange')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'IsFinal'); args=('[ScheduleYears]', 'IsFinal')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'SubjectId'); args=('[ScheduleYears]', 'SubjectId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'SubjectTypeId'); args=('[ScheduleYears]', 'SubjectTypeId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'SemesterId'); args=('[ScheduleYears]', 'SemesterId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[ScheduleYears]', 'YearId'); args=('[ScheduleYears]', 'YearId')
(0.031) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Semesters',); args=('Semesters',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Semesters',); args=['Semesters']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Semesters',); args=['Semesters']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Semesters',); args=['Semesters']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Semesters',); args=['Semesters']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Semesters',); args=['Semesters']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Semesters',); args=['Semesters']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Semesters]', 'Id'); args=('[Semesters]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Semesters]', 'Name'); args=('[Semesters]', 'Name')
(0.016) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Subject',); args=('Subject',)
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Subject',); args=['Subject']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Subject',); args=['Subject']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Subject',); args=['Subject']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Subject',); args=['Subject']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Subject',); args=['Subject']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Subject',); args=['Subject']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Subject]', 'Id'); args=('[Subject]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Subject]', 'Name'); args=('[Subject]', 'Name')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Subject]', 'FullName'); args=('[Subject]', 'FullName')
(0.058) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('SubjectDepartment',); args=('SubjectDepartment',)
(0.003) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('SubjectDepartment',); args=['SubjectDepartment']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('SubjectDepartment',); args=['SubjectDepartment']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('SubjectDepartment',); args=['SubjectDepartment']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('SubjectDepartment',); args=['SubjectDepartment']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('SubjectDepartment',); args=['SubjectDepartment']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('SubjectDepartment',); args=['SubjectDepartment']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[SubjectDepartment]', 'Id'); args=('[SubjectDepartment]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[SubjectDepartment]', 'SubjectId'); args=('[SubjectDepartment]', 'SubjectId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[SubjectDepartment]', 'DepartmentId'); args=('[SubjectDepartment]', 'DepartmentId')
(0.016) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('SubjectType',); args=('SubjectType',)
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('SubjectType',); args=['SubjectType']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('SubjectType',); args=['SubjectType']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('SubjectType',); args=['SubjectType']
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('SubjectType',); args=['SubjectType']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('SubjectType',); args=['SubjectType']
(0.016) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('SubjectType',); args=['SubjectType']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[SubjectType]', 'Id'); args=('[SubjectType]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[SubjectType]', 'Name'); args=('[SubjectType]', 'Name')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[SubjectType]', 'FullName'); args=('[SubjectType]', 'FullName')
(0.016) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Teacher',); args=('Teacher',)
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Teacher',); args=['Teacher']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Teacher',); args=['Teacher']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Teacher',); args=['Teacher']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Teacher',); args=['Teacher']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Teacher',); args=['Teacher']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Teacher',); args=['Teacher']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Teacher]', 'Id'); args=('[Teacher]', 'Id')
(0.016) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Teacher]', 'FirstName'); args=('[Teacher]', 'FirstName')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Teacher]', 'LastName'); args=('[Teacher]', 'LastName')
(0.047) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('TeacherDepartment',); args=('TeacherDepartment',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('TeacherDepartment',); args=['TeacherDepartment']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('TeacherDepartment',); args=['TeacherDepartment']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('TeacherDepartment',); args=['TeacherDepartment']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('TeacherDepartment',); args=['TeacherDepartment']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('TeacherDepartment',); args=['TeacherDepartment']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('TeacherDepartment',); args=['TeacherDepartment']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[TeacherDepartment]', 'Id'); args=('[TeacherDepartment]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[TeacherDepartment]', 'TeacherId'); args=('[TeacherDepartment]', 'TeacherId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[TeacherDepartment]', 'DepartmentId'); args=('[TeacherDepartment]', 'DepartmentId')
(0.063) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('TeacherPersonalTime',); args=('TeacherPersonalTime',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('TeacherPersonalTime',); args=['TeacherPersonalTime']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('TeacherPersonalTime',); args=['TeacherPersonalTime']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('TeacherPersonalTime',); args=['TeacherPersonalTime']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('TeacherPersonalTime',); args=['TeacherPersonalTime']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('TeacherPersonalTime',); args=['TeacherPersonalTime']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('TeacherPersonalTime',); args=['TeacherPersonalTime']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[TeacherPersonalTime]', 'Id'); args=('[TeacherPersonalTime]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[TeacherPersonalTime]', 'TeacherId'); args=('[TeacherPersonalTime]', 'TeacherId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[TeacherPersonalTime]', 'HourId'); args=('[TeacherPersonalTime]', 'HourId')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[TeacherPersonalTime]', 'DayOfWeekId'); args=('[TeacherPersonalTime]', 'DayOfWeekId')
(0.016) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Week',); args=('Week',)
(0.031) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Week',); args=['Week']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Week',); args=['Week']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Week',); args=['Week']
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Week',); args=['Week']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Week',); args=['Week']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Week',); args=['Week']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Week]', 'Id'); args=('[Week]', 'Id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Week]', 'Number'); args=('[Week]', 'Number')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Week]', 'Znamenatel'); args=('[Week]', 'Znamenatel')
(0.031) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('Years',); args=('Years',)
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Years',); args=['Years']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Years',); args=['Years']
(0.016) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Years',); args=['Years']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('Years',); args=['Years']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('Years',); args=['Years']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('Years',); args=['Years']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Years]', 'Id'); args=('[Years]', 'Id')
(0.016) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[Years]', 'Name'); args=('[Years]', 'Name')
(0.125) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('auth_group',); args=('auth_group',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_group',); args=['auth_group']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_group',); args=['auth_group']
(0.016) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_group',); args=['auth_group']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_group',); args=['auth_group']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_group',); args=['auth_group']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_group',); args=['auth_group']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_group]', 'id'); args=('[auth_group]', 'id')
(0.016) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_group]', 'name'); args=('[auth_group]', 'name')
(0.063) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('auth_group_permissions',); args=('auth_group_permissions',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_group_permissions',); args=['auth_group_permissions']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_group_permissions',); args=['auth_group_permissions']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_group_permissions',); args=['auth_group_permissions']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_group_permissions',); args=['auth_group_permissions']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_group_permissions',); args=['auth_group_permissions']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_group_permissions',); args=['auth_group_permissions']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_group_permissions]', 'id'); args=('[auth_group_permissions]', 'id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_group_permissions]', 'group_id'); args=('[auth_group_permissions]', 'group_id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_group_permissions]', 'permission_id'); args=('[auth_group_permissions]', 'permission_id')
(0.047) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('auth_permission',); args=('auth_permission',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_permission',); args=['auth_permission']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_permission',); args=['auth_permission']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_permission',); args=['auth_permission']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_permission',); args=['auth_permission']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_permission',); args=['auth_permission']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_permission',); args=['auth_permission']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_permission]', 'id'); args=('[auth_permission]', 'id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_permission]', 'name'); args=('[auth_permission]', 'name')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_permission]', 'content_type_id'); args=('[auth_permission]', 'content_type_id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_permission]', 'codename'); args=('[auth_permission]', 'codename')
(0.016) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('auth_user',); args=('auth_user',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_user',); args=['auth_user']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_user',); args=['auth_user']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_user',); args=['auth_user']
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_user',); args=['auth_user']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_user',); args=['auth_user']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_user',); args=['auth_user']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user]', 'id'); args=('[auth_user]', 'id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user]', 'password'); args=('[auth_user]', 'password')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user]', 'last_login'); args=('[auth_user]', 'last_login')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user]', 'is_superuser'); args=('[auth_user]', 'is_superuser')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user]', 'username'); args=('[auth_user]', 'username')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user]', 'first_name'); args=('[auth_user]', 'first_name')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user]', 'last_name'); args=('[auth_user]', 'last_name')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user]', 'email'); args=('[auth_user]', 'email')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user]', 'is_staff'); args=('[auth_user]', 'is_staff')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user]', 'is_active'); args=('[auth_user]', 'is_active')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user]', 'date_joined'); args=('[auth_user]', 'date_joined')
(0.047) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('auth_user_groups',); args=('auth_user_groups',)
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_user_groups',); args=['auth_user_groups']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_user_groups',); args=['auth_user_groups']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_user_groups',); args=['auth_user_groups']
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_user_groups',); args=['auth_user_groups']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_user_groups',); args=['auth_user_groups']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_user_groups',); args=['auth_user_groups']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user_groups]', 'id'); args=('[auth_user_groups]', 'id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user_groups]', 'user_id'); args=('[auth_user_groups]', 'user_id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user_groups]', 'group_id'); args=('[auth_user_groups]', 'group_id')
(0.047) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('auth_user_user_permissions',); args=('auth_user_user_permissions',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_user_user_permissions',); args=['auth_user_user_permissions']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_user_user_permissions',); args=['auth_user_user_permissions']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_user_user_permissions',); args=['auth_user_user_permissions']
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('auth_user_user_permissions',); args=['auth_user_user_permissions']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('auth_user_user_permissions',); args=['auth_user_user_permissions']
(0.016) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('auth_user_user_permissions',); args=['auth_user_user_permissions']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user_user_permissions]', 'id'); args=('[auth_user_user_permissions]', 'id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user_user_permissions]', 'user_id'); args=('[auth_user_user_permissions]', 'user_id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[auth_user_user_permissions]', 'permission_id'); args=('[auth_user_user_permissions]', 'permission_id')
(0.047) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('django_admin_log',); args=('django_admin_log',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('django_admin_log',); args=['django_admin_log']
(0.016) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('django_admin_log',); args=['django_admin_log']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('django_admin_log',); args=['django_admin_log']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('django_admin_log',); args=['django_admin_log']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('django_admin_log',); args=['django_admin_log']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('django_admin_log',); args=['django_admin_log']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_admin_log]', 'id'); args=('[django_admin_log]', 'id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_admin_log]', 'action_time'); args=('[django_admin_log]', 'action_time')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_admin_log]', 'object_id'); args=('[django_admin_log]', 'object_id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_admin_log]', 'object_repr'); args=('[django_admin_log]', 'object_repr')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_admin_log]', 'action_flag'); args=('[django_admin_log]', 'action_flag')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_admin_log]', 'change_message'); args=('[django_admin_log]', 'change_message')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_admin_log]', 'content_type_id'); args=('[django_admin_log]', 'content_type_id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_admin_log]', 'user_id'); args=('[django_admin_log]', 'user_id')
(0.016) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('django_content_type',); args=('django_content_type',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('django_content_type',); args=['django_content_type']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('django_content_type',); args=['django_content_type']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('django_content_type',); args=['django_content_type']
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('django_content_type',); args=['django_content_type']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('django_content_type',); args=['django_content_type']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('django_content_type',); args=['django_content_type']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_content_type]', 'id'); args=('[django_content_type]', 'id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_content_type]', 'app_label'); args=('[django_content_type]', 'app_label')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_content_type]', 'model'); args=('[django_content_type]', 'model')
(0.016) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('django_migrations',); args=('django_migrations',)
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('django_migrations',); args=['django_migrations']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('django_migrations',); args=['django_migrations']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('django_migrations',); args=['django_migrations']
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('django_migrations',); args=['django_migrations']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('django_migrations',); args=['django_migrations']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('django_migrations',); args=['django_migrations']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_migrations]', 'id'); args=('[django_migrations]', 'id')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_migrations]', 'app'); args=('[django_migrations]', 'app')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_migrations]', 'name'); args=('[django_migrations]', 'name')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_migrations]', 'applied'); args=('[django_migrations]', 'applied')
(0.031) QUERY = "\nSELECT e.COLUMN_NAME AS column_name,\n  c.TABLE_NAME AS referenced_table_name,\n  d.COLUMN_NAME AS referenced_column_name\nFROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS a\nINNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS AS b\n  ON a.CONSTRAINT_NAME = b.CONSTRAINT_NAME AND a.TABLE_SCHEMA = b.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_TABLE_USAGE AS c\n  ON b.UNIQUE_CONSTRAINT_NAME = c.CONSTRAINT_NAME AND b.CONSTRAINT_SCHEMA = c.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS d\n  ON c.CONSTRAINT_NAME = d.CONSTRAINT_NAME AND c.CONSTRAINT_SCHEMA = d.CONSTRAINT_SCHEMA\nINNER JOIN INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS e\n  ON a.CONSTRAINT_NAME = e.CONSTRAINT_NAME AND a.TABLE_SCHEMA = e.TABLE_SCHEMA\nWHERE a.TABLE_SCHEMA = SCHEMA_NAME() AND a.TABLE_NAME = %s AND a.CONSTRAINT_TYPE = 'FOREIGN KEY'" - PARAMS = ('django_session',); args=('django_session',)
(0.000) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('django_session',); args=['django_session']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('django_session',); args=['django_session']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('django_session',); args=['django_session']
(0.016) QUERY = '\n            SELECT\n                kc.constraint_name,\n                kc.column_name,\n                tc.constraint_type,\n                fk.referenced_table_name,\n                fk.referenced_column_name\n            FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE AS kc\n            INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS tc ON\n                kc.table_schema = tc.table_schema AND\n                kc.table_name = tc.table_name AND\n                kc.constraint_name = tc.constraint_name\n            LEFT OUTER JOIN (\n                SELECT\n                    ps.name AS table_schema,\n                    pt.name AS table_name,\n                    pc.name AS column_name,\n                    rt.name AS referenced_table_name,\n                    rc.name AS referenced_column_name\n                FROM\n                    sys.foreign_key_columns fkc\n                INNER JOIN sys.tables pt ON\n                    fkc.parent_object_id = pt.object_id\n                INNER JOIN sys.schemas ps ON\n                    pt.schema_id = ps.schema_id\n                INNER JOIN sys.columns pc ON\n                    fkc.parent_object_id = pc.object_id AND\n                    fkc.parent_column_id = pc.column_id\n                INNER JOIN sys.tables rt ON\n                    fkc.referenced_object_id = rt.object_id\n                INNER JOIN sys.schemas rs ON\n                    rt.schema_id = rs.schema_id\n                INNER JOIN sys.columns rc ON\n                    fkc.referenced_object_id = rc.object_id AND\n                    fkc.referenced_column_id = rc.column_id\n            ) fk ON\n                kc.table_schema = fk.table_schema AND\n                kc.table_name = fk.table_name AND\n                kc.column_name = fk.column_name\n            WHERE\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n            ORDER BY\n                kc.constraint_name ASC,\n                kc.ordinal_position ASC\n        ' - PARAMS = ('django_session',); args=['django_session']
(0.000) QUERY = "\n            SELECT kc.constraint_name, kc.column_name\n            FROM INFORMATION_SCHEMA.CONSTRAINT_COLUMN_USAGE AS kc\n            JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS AS c ON\n                kc.table_schema = c.table_schema AND\n                kc.table_name = c.table_name AND\n                kc.constraint_name = c.constraint_name\n            WHERE\n                c.constraint_type = 'CHECK' AND\n                kc.table_schema = SCHEMA_NAME() AND\n                kc.table_name = %s\n        " - PARAMS = ('django_session',); args=['django_session']
(0.000) QUERY = '\n            SELECT\n                i.name AS index_name,\n                i.is_unique,\n                i.is_primary_key,\n                i.type,\n                i.type_desc,\n                ic.is_descending_key,\n                c.name AS column_name\n            FROM\n                sys.tables AS t\n            INNER JOIN sys.schemas AS s ON\n                t.schema_id = s.schema_id\n            INNER JOIN sys.indexes AS i ON\n                t.object_id = i.object_id\n            INNER JOIN sys.index_columns AS ic ON\n                i.object_id = ic.object_id AND\n                i.index_id = ic.index_id\n            INNER JOIN sys.columns AS c ON\n                ic.object_id = c.object_id AND\n                ic.column_id = c.column_id\n            WHERE\n                t.schema_id = SCHEMA_ID() AND\n                t.name = %s\n            ORDER BY\n                i.index_id ASC,\n                ic.index_column_id ASC\n        ' - PARAMS = ('django_session',); args=['django_session']
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_session]', 'session_key'); args=('[django_session]', 'session_key')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_session]', 'session_data'); args=('[django_session]', 'session_data')
(0.000) QUERY = "SELECT COLUMNPROPERTY(OBJECT_ID(%s), %s, 'IsIdentity')" - PARAMS = ('[django_session]', 'expire_date'); args=('[django_session]', 'expire_date')
(0.002) QUERY = "SELECT CAST(SERVERPROPERTY('ProductVersion') AS varchar)" - PARAMS = (); args=None
(0.018) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.001) QUERY = 'SELECT [django_migrations].[app], [django_migrations].[name] FROM [django_migrations]' - PARAMS = (); args=()
(0.181) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('ckrx78fzyqccqqe74xctsla7bs99m4u7', datetime.datetime(2018, 5, 9, 18, 55, 20, 59714)); args=('ckrx78fzyqccqqe74xctsla7bs99m4u7', datetime.datetime(2018, 5, 9, 18, 55, 20, 59714))
(0.002) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.129) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.019) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building]' - PARAMS = (); args=()
(0.043) QUERY = 'SELECT TOP 50 [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] ORDER BY [Auditorium].[BuildingId] ASC' - PARAMS = (); args=()
(0.002) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.012) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.002) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (85,); args=(85,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (54,); args=(54,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (41,); args=(41,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (10,); args=(10,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.002) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (5,); args=(5,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (46,); args=(46,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (10,); args=(10,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (74,); args=(74,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (4,); args=(4,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (2,); args=(2,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (73,); args=(73,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (94,); args=(94,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (7,); args=(7,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (50,); args=(50,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (42,); args=(42,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (3,); args=(3,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (107,); args=(107,)
(0.004) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department] WHERE [Department].[Id] = %s' - PARAMS = (69,); args=(69,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.000) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.001) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType] WHERE [AuditoriumType].[Id] = %s' - PARAMS = (6,); args=(6,)
(0.002) QUERY = "SELECT CAST(SERVERPROPERTY('ProductVersion') AS varchar)" - PARAMS = (); args=None
(0.084) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.024) QUERY = 'SELECT [django_migrations].[app], [django_migrations].[name] FROM [django_migrations]' - PARAMS = (); args=()
(0.002) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('ckrx78fzyqccqqe74xctsla7bs99m4u7', datetime.datetime(2018, 5, 9, 18, 56, 12, 500901)); args=('ckrx78fzyqccqqe74xctsla7bs99m4u7', datetime.datetime(2018, 5, 9, 18, 56, 12, 500901))
(0.006) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.001) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('ckrx78fzyqccqqe74xctsla7bs99m4u7', datetime.datetime(2018, 5, 9, 18, 56, 16, 26407)); args=('ckrx78fzyqccqqe74xctsla7bs99m4u7', datetime.datetime(2018, 5, 9, 18, 56, 16, 26407))
(0.001) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.003) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.002) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.131) QUERY = 'SELECT TOP 100 [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] ORDER BY [Auditorium].[Id] DESC' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('ckrx78fzyqccqqe74xctsla7bs99m4u7', datetime.datetime(2018, 5, 9, 18, 56, 17, 803097)); args=('ckrx78fzyqccqqe74xctsla7bs99m4u7', datetime.datetime(2018, 5, 9, 18, 56, 17, 803097))
(0.001) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.003) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('ckrx78fzyqccqqe74xctsla7bs99m4u7', datetime.datetime(2018, 5, 9, 19, 17, 10, 486921)); args=('ckrx78fzyqccqqe74xctsla7bs99m4u7', datetime.datetime(2018, 5, 9, 19, 17, 10, 486921))
(0.002) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.005) QUERY = 'SELECT [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] WHERE [Auditorium].[Id] = %s' - PARAMS = (541,); args=(541,)
(0.040) QUERY = 'SELECT [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_content_type] WHERE ([django_content_type].[app_label] = %s AND [django_content_type].[model] = %s)' - PARAMS = ('auditorium', 'auditorium'); args=('auditorium', 'auditorium')
(0.000) QUERY = 'SELECT [django_content_type].[id], [django_content_type].[app_label], [django_content_type].[model] FROM [django_content_type] WHERE ([django_content_type].[app_label] = %s AND [django_content_type].[model] = %s)' - PARAMS = ('auditorium', 'auditorium'); args=('auditorium', 'auditorium')
(0.001) QUERY = 'SELECT @@TRANCOUNT' - PARAMS = (); args=None
(0.090) QUERY = 'SAVE TRANSACTION s972_x1' - PARAMS = (); args=None
(0.319) QUERY = 'SET NOCOUNT ON INSERT INTO [django_content_type] ([app_label], [model]) VALUES (%s, %s); SELECT CAST(SCOPE_IDENTITY() AS bigint)' - PARAMS = ('auditorium', 'auditorium'); args=('auditorium', 'auditorium')
(0.032) QUERY = 'SELECT [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department]' - PARAMS = (); args=()
(0.065) QUERY = 'SELECT [AuditoriumType].[Id], [AuditoriumType].[Name], [AuditoriumType].[FullName] FROM [AuditoriumType]' - PARAMS = (); args=()
(0.002) QUERY = 'SELECT [Building].[Id], [Building].[FullName], [Building].[Number], [Building].[Location], [Building].[Address] FROM [Building]' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('ckrx78fzyqccqqe74xctsla7bs99m4u7', datetime.datetime(2018, 5, 9, 19, 17, 11, 493091)); args=('ckrx78fzyqccqqe74xctsla7bs99m4u7', datetime.datetime(2018, 5, 9, 19, 17, 11, 493091))
(0.001) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.001) QUERY = 'SELECT [django_session].[session_key], [django_session].[session_data], [django_session].[expire_date] FROM [django_session] WHERE ([django_session].[session_key] = %s AND [django_session].[expire_date] > %s)' - PARAMS = ('ckrx78fzyqccqqe74xctsla7bs99m4u7', datetime.datetime(2018, 5, 9, 19, 17, 15, 658513)); args=('ckrx78fzyqccqqe74xctsla7bs99m4u7', datetime.datetime(2018, 5, 9, 19, 17, 15, 658513))
(0.001) QUERY = 'SELECT [auth_user].[id], [auth_user].[password], [auth_user].[last_login], [auth_user].[is_superuser], [auth_user].[username], [auth_user].[first_name], [auth_user].[last_name], [auth_user].[email], [auth_user].[is_staff], [auth_user].[is_active], [auth_user].[date_joined] FROM [auth_user] WHERE [auth_user].[id] = %s' - PARAMS = (1,); args=(1,)
(0.002) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Auditorium]' - PARAMS = (); args=()
(0.013) QUERY = 'SELECT TOP 100 [Auditorium].[Id], [Auditorium].[Number], [Auditorium].[Name], [Auditorium].[DepartmentId], [Auditorium].[SeatingCapacity], [Auditorium].[AuditoriumTypeId], [Auditorium].[BuildingId], [Auditorium].[Location] FROM [Auditorium] ORDER BY [Auditorium].[Id] DESC' - PARAMS = (); args=()
(0.016) QUERY = "SELECT CAST(SERVERPROPERTY('ProductVersion') AS varchar)" - PARAMS = (); args=None
(0.141) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.078) QUERY = 'SELECT [django_migrations].[app], [django_migrations].[name] FROM [django_migrations]' - PARAMS = (); args=()
(0.000) QUERY = "SELECT CAST(SERVERPROPERTY('ProductVersion') AS varchar)" - PARAMS = (); args=None
(0.000) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.000) QUERY = 'SELECT [django_migrations].[app], [django_migrations].[name] FROM [django_migrations]' - PARAMS = (); args=()
(0.000) QUERY = "SELECT CAST(SERVERPROPERTY('ProductVersion') AS varchar)" - PARAMS = (); args=None
(0.000) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.000) QUERY = 'SELECT [django_migrations].[app], [django_migrations].[name] FROM [django_migrations]' - PARAMS = (); args=()
(0.000) QUERY = "SELECT CAST(SERVERPROPERTY('ProductVersion') AS varchar)" - PARAMS = (); args=None
(0.000) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.000) QUERY = 'SELECT [django_migrations].[app], [django_migrations].[name] FROM [django_migrations]' - PARAMS = (); args=()
(0.149) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Department]' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Department]' - PARAMS = (); args=()
(0.000) QUERY = "SELECT CAST(SERVERPROPERTY('ProductVersion') AS varchar)" - PARAMS = (); args=None
(0.016) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.000) QUERY = 'SELECT [django_migrations].[app], [django_migrations].[name] FROM [django_migrations]' - PARAMS = (); args=()
(0.016) QUERY = "SELECT CAST(SERVERPROPERTY('ProductVersion') AS varchar)" - PARAMS = (); args=None
(0.000) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.000) QUERY = 'SELECT [django_migrations].[app], [django_migrations].[name] FROM [django_migrations]' - PARAMS = (); args=()
(0.001) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Department]' - PARAMS = (); args=()
(0.002) QUERY = "SELECT CAST(SERVERPROPERTY('ProductVersion') AS varchar)" - PARAMS = (); args=None
(0.003) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.038) QUERY = 'SELECT [django_migrations].[app], [django_migrations].[name] FROM [django_migrations]' - PARAMS = (); args=()
(0.000) QUERY = "SELECT CAST(SERVERPROPERTY('ProductVersion') AS varchar)" - PARAMS = (); args=None
(0.003) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.000) QUERY = 'SELECT [django_migrations].[app], [django_migrations].[name] FROM [django_migrations]' - PARAMS = (); args=()
(0.002) QUERY = 'SELECT TOP 21 [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department]' - PARAMS = (); args=()
(0.000) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Department]' - PARAMS = (); args=()
(0.000) QUERY = "SELECT CAST(SERVERPROPERTY('ProductVersion') AS varchar)" - PARAMS = (); args=None
(0.000) QUERY = 'SELECT TABLE_NAME, TABLE_TYPE FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = SCHEMA_NAME()' - PARAMS = (); args=None
(0.000) QUERY = 'SELECT [django_migrations].[app], [django_migrations].[name] FROM [django_migrations]' - PARAMS = (); args=()
(0.017) QUERY = 'SELECT TOP 21 [Department].[Id], [Department].[Name], [Department].[FullName], [Department].[FacultyId] FROM [Department]' - PARAMS = (); args=()
(0.011) QUERY = 'SELECT COUNT_BIG(*) AS [__count] FROM [Department]' - PARAMS = (); args=()
